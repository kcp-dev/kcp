/*
Copyright The KCP Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by kcp code-generator. DO NOT EDIT.

package v1beta1

import (
	"github.com/kcp-dev/client-go/informers/internalinterfaces"
)

type ClusterInterface interface {
	// Ingresses returns a IngressClusterInformer
	Ingresses() IngressClusterInformer
	// IngressClasses returns a IngressClassClusterInformer
	IngressClasses() IngressClassClusterInformer
	// IPAddresses returns a IPAddressClusterInformer
	IPAddresses() IPAddressClusterInformer
	// ServiceCIDRs returns a ServiceCIDRClusterInformer
	ServiceCIDRs() ServiceCIDRClusterInformer
}

type version struct {
	factory          internalinterfaces.SharedInformerFactory
	tweakListOptions internalinterfaces.TweakListOptionsFunc
}

// New returns a new ClusterInterface.
func New(f internalinterfaces.SharedInformerFactory, tweakListOptions internalinterfaces.TweakListOptionsFunc) ClusterInterface {
	return &version{factory: f, tweakListOptions: tweakListOptions}
}

// Ingresses returns a IngressClusterInformer
func (v *version) Ingresses() IngressClusterInformer {
	return &ingressClusterInformer{factory: v.factory, tweakListOptions: v.tweakListOptions}
}

// IngressClasses returns a IngressClassClusterInformer
func (v *version) IngressClasses() IngressClassClusterInformer {
	return &ingressClassClusterInformer{factory: v.factory, tweakListOptions: v.tweakListOptions}
}

// IPAddresses returns a IPAddressClusterInformer
func (v *version) IPAddresses() IPAddressClusterInformer {
	return &iPAddressClusterInformer{factory: v.factory, tweakListOptions: v.tweakListOptions}
}

// ServiceCIDRs returns a ServiceCIDRClusterInformer
func (v *version) ServiceCIDRs() ServiceCIDRClusterInformer {
	return &serviceCIDRClusterInformer{factory: v.factory, tweakListOptions: v.tweakListOptions}
}
