
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: apisets.initialization.tenancy.kcp.dev
spec:
  group: initialization.tenancy.kcp.dev
  names:
    categories:
    - kcp
    kind: APISet
    listKind: APISetList
    plural: apisets
    singular: apiset
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: APISet records a set of API Bindings that need to be created
          and bound before initialization is complete. This configuration applies
          to all workspaces of the type that shares a name with this object.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: APISetSpec holds the desired state of the APISet.
            properties:
              bindings:
                description: bindings are the API Bindings to create during initialization.
                items:
                  description: APIBindingSpec records the APIs and implementations
                    that are to be bound.
                  properties:
                    reference:
                      description: reference uniquely identifies an API to bind to.
                      properties:
                        workspace:
                          description: workspace is a reference to an APIExport in
                            the same organization. The creator of the APIBinding needs
                            to have access to the APIExport with the verb `bind` in
                            order to bind to it.
                          properties:
                            exportName:
                              description: Name of the APIExport that describes the
                                API.
                              type: string
                            path:
                              description: path is an absolute reference to a workspace,
                                e.g. root:org:ws. The workspace must be some ancestor
                                or a child of some ancestor. If it is unset, the path
                                of the APIBinding is used.
                              pattern: ^root(:[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                              type: string
                          required:
                          - exportName
                          type: object
                      type: object
                  required:
                  - reference
                  type: object
                type: array
            type: object
          status:
            description: APISetStatus communicates the observed state of the APISet.
            properties:
              conditions:
                description: conditions is a list of conditions that apply to the
                  APISet.
                items:
                  description: Condition defines an observation of a object operational
                    state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
