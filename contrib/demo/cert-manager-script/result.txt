ingress-demo $ [1;37mkubectl get ingresses --all-namespaces[0m
Error from server (NotFound): Unable to list "networking.k8s.io/v1, Resource=ingresses": the server could not find the requested resource (get ingresses.networking.k8s.io)
ingress-demo $ [1;37mkubectl get cluster -o wide[0m
No resources found
ingress-demo $ [1;37mkubectl apply -f /home/jmprusi/go/src/github.com/jmprusi/kcp/contrib/demo/clusters/kind/us-west1.yaml[0m
cluster.cluster.example.dev/us-west1 created
ingress-demo $ [1;37mkubectl wait cluster/us-west1 --for condition=Ready --timeout=60s[0m
cluster.cluster.example.dev/us-west1 condition met
ingress-demo $ [1;37mkubectl apply -f /home/jmprusi/go/src/github.com/jmprusi/kcp/contrib/demo/clusters/kind/us-east1.yaml[0m
cluster.cluster.example.dev/us-east1 created
ingress-demo $ [1;37mkubectl wait cluster/us-east1 --for condition=Ready --timeout=60s[0m
cluster.cluster.example.dev/us-east1 condition met
ingress-demo $ [1;37mkubectl get clusters -o wide[0m
NAME       LOCATION   READY   SYNCED API RESOURCES
us-east1   us-east1   True    ["deployments.apps","ingresses.networking.k8s.io","services"]
us-west1   us-west1   True    ["deployments.apps","ingresses.networking.k8s.io","services"]
[H[2J[3Jingress-demo $ [1;37mkubectl create namespace default[0m
namespace/default created
ingress-demo $ [1;37mkubectl apply -f /home/jmprusi/go/src/github.com/jmprusi/kcp/contrib/demo/../examples/ingress-demo[0m
deployment.apps/httpecho created
service/httpecho created
ingress.networking.k8s.io/httpecho created
ingress-demo $ [1;37mkubectl label --overwrite deployment httpecho kcp.dev/cluster=us-east1[0m
deployment.apps/httpecho labeled
ingress-demo $ [1;37mkubectl label --overwrite service httpecho kcp.dev/cluster=us-east1[0m
service/httpecho labeled
ingress-demo $ [1;37mkubectl wait --for=condition=available --timeout=60s deployment/httpecho[0m
deployment.apps/httpecho condition met
[H[2J[3Jingress-demo $ [1;37mKUBECONFIG=/home/jmprusi/go/src/github.com/jmprusi/kcp/contrib/demo/clusters/kind/us-east1.kubeconfig kubectl get deployment/httpecho -o wide[0m
NAME       READY   UP-TO-DATE   AVAILABLE   AGE   CONTAINERS   IMAGES                SELECTOR
httpecho   1/1     1            1           29s   httpecho     jmalloc/echo-server   app=httpecho
ingress-demo $ [1;37mkubectl get ingresses[0m
NAME                 AGE
httpecho             42s
httpecho--us-east1   28s
ingress-demo $ [1;37mcurl -s -o /dev/null -w %{http_code} -H 'Host: httpecho.kcp-apps.127.0.0.1.nip.io' http://localhost:8181/[0m
200[H[2J[3Jingress-demo $ [1;37mkubectl label --overwrite deployment httpecho kcp.dev/cluster=us-west1[0m
deployment.apps/httpecho labeled
ingress-demo $ [1;37mkubectl label --overwrite service httpecho kcp.dev/cluster=us-west1[0m
service/httpecho labeled
ingress-demo $ [1;37mkubectl wait --for=condition=available --timeout=60s deployment/httpecho[0m
deployment.apps/httpecho condition met
[H[2J[3Jingress-demo $ [1;37mKUBECONFIG=/home/jmprusi/go/src/github.com/jmprusi/kcp/contrib/demo/clusters/kind/us-west1.kubeconfig kubectl get deployment/httpecho -o wide[0m
NAME       READY   UP-TO-DATE   AVAILABLE   AGE   CONTAINERS   IMAGES                SELECTOR
httpecho   1/1     1            1           28s   httpecho     jmalloc/echo-server   app=httpecho
ingress-demo $ [1;37mkubectl get ingresses[0m
NAME                 AGE
httpecho             98s
httpecho--us-west1   31s
ingress-demo $ [1;37mcurl -s -o /dev/null -w %{http_code} -H 'Host: httpecho.kcp-apps.127.0.0.1.nip.io' http://localhost:8181/[0m
200