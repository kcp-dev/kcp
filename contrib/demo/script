#!/bin/bash

b="$( dirname "${BASH_SOURCE[0]}" )"
. $b/demo-magic

TYPE_SPEED=30
PROMPT_AFTER=1
DEMO_PROMPT="☸️ $ "

export KUBECONFIG=.kcp/data/admin.kubeconfig
if ! kubectl get namespaces &>/dev/null; then
  echo "kcp server not started, run 'bin/kcp start'"
fi

kubectl config use-context admin
kubectl delete crds --all > /dev/null

clear
wait

pr
pei "kubectl get pods"
wait
pei "kubectl api-resources"

wait
pei "kubectl apply -Rf contrib/demo/external-integrations"
kubectl wait crd/databases.postgresql.crossplane.io --for condition=established > /dev/null
sleep 1
pei "kubectl explain database"
wait

clear
pr

wait
pei "kubectl config view --minify | grep server:"
wait
pei "kubectl config use-context user"
wait
pei "kubectl config view --minify | grep server:"
wait
NO_WAIT=1 p "kubectl get databases"
echo "error: the server doesn't have a resource type \"databases\""
pr
pei "kubectl get crds" # no crds

wait
## FAKE below
clear
pr

pei "head -n 10 cluster-us-west1.yaml"
NO_WAIT=1 p  "kubectl apply -f cluster-us-west1.yaml"
echo "clusters.cluster.example.dev/us-west1 created"
pr
wait
clear
pr
pei "head -n 10 cluster-us-east1.yaml"
NO_WAIT=1 p  "kubectl apply -f cluster-us-east1.yaml"
echo "clusters.cluster.example.dev/us-east1 created"
pr
wait

NO_WAIT=1 p "kubectl api-resources"
cat << EOF
NAME                              SHORTNAMES   APIVERSION                             NAMESPACED   KIND
bindings                                       v1                                     true         Binding
componentstatuses                 cs           v1                                     false        ComponentStatus
configmaps                        cm           v1                                     true         ConfigMap
endpoints                         ep           v1                                     true         Endpoints
events                            ev           v1                                     true         Event
limitranges                       limits       v1                                     true         LimitRange
namespaces                        ns           v1                                     false        Namespace
nodes                             no           v1                                     false        Node
persistentvolumeclaims            pvc          v1                                     true         PersistentVolumeClaim
persistentvolumes                 pv           v1                                     false        PersistentVolume
pods                              po           v1                                     true         Pod
podtemplates                                   v1                                     true         PodTemplate
replicationcontrollers            rc           v1                                     true         ReplicationController
resourcequotas                    quota        v1                                     true         ResourceQuota
secrets                                        v1                                     true         Secret
serviceaccounts                   sa           v1                                     true         ServiceAccount
services                          svc          v1                                     true         Service
mutatingwebhookconfigurations                  admissionregistration.k8s.io/v1        false        MutatingWebhookConfiguration
validatingwebhookconfigurations                admissionregistration.k8s.io/v1        false        ValidatingWebhookConfiguration
customresourcedefinitions         crd,crds     apiextensions.k8s.io/v1                false        CustomResourceDefinition
apiservices                                    apiregistration.k8s.io/v1              false        APIService
controllerrevisions                            apps/v1                                true         ControllerRevision
daemonsets                        ds           apps/v1                                true         DaemonSet
deployments                       deploy       apps/v1                                true         Deployment
replicasets                       rs           apps/v1                                true         ReplicaSet
statefulsets                      sts          apps/v1                                true         StatefulSet
tokenreviews                                   authentication.k8s.io/v1               false        TokenReview
localsubjectaccessreviews                      authorization.k8s.io/v1                true         LocalSubjectAccessReview
selfsubjectaccessreviews                       authorization.k8s.io/v1                false        SelfSubjectAccessReview
selfsubjectrulesreviews                        authorization.k8s.io/v1                false        SelfSubjectRulesReview
subjectaccessreviews                           authorization.k8s.io/v1                false        SubjectAccessReview
horizontalpodautoscalers          hpa          autoscaling/v1                         true         HorizontalPodAutoscaler
cronjobs                          cj           batch/v1beta1                          true         CronJob
jobs                                           batch/v1                               true         Job
certificatesigningrequests        csr          certificates.k8s.io/v1                 false        CertificateSigningRequest
leases                                         coordination.k8s.io/v1                 true         Lease
endpointslices                                 discovery.k8s.io/v1beta1               true         EndpointSlice
events                            ev           events.k8s.io/v1                       true         Event
ingresses                         ing          extensions/v1beta1                     true         Ingress
flowschemas                                    flowcontrol.apiserver.k8s.io/v1beta1   false        FlowSchema
prioritylevelconfigurations                    flowcontrol.apiserver.k8s.io/v1beta1   false        PriorityLevelConfiguration
ingressclasses                                 networking.k8s.io/v1                   false        IngressClass
ingresses                         ing          networking.k8s.io/v1                   true         Ingress
networkpolicies                   netpol       networking.k8s.io/v1                   true         NetworkPolicy
runtimeclasses                                 node.k8s.io/v1                         false        RuntimeClass
poddisruptionbudgets              pdb          policy/v1beta1                         true         PodDisruptionBudget
podsecuritypolicies               psp          policy/v1beta1                         false        PodSecurityPolicy
clusterrolebindings                            rbac.authorization.k8s.io/v1           false        ClusterRoleBinding
clusterroles                                   rbac.authorization.k8s.io/v1           false        ClusterRole
rolebindings                                   rbac.authorization.k8s.io/v1           true         RoleBinding
roles                                          rbac.authorization.k8s.io/v1           true         Role
priorityclasses                   pc           scheduling.k8s.io/v1                   false        PriorityClass
csidrivers                                     storage.k8s.io/v1                      false        CSIDriver
csinodes                                       storage.k8s.io/v1                      false        CSINode
storageclasses                    sc           storage.k8s.io/v1                      false        StorageClass
volumeattachments                              storage.k8s.io/v1                      false        VolumeAttachment
EOF
pr

wait
clear
pr
pei "cat deployment.yaml"
wait
NO_WAIT=1 p "kubectl apply -f deployment.yaml"
echo "deployment.apps/my-deployment created"
pr
wait

clear
pr
NO_WAIT=1 p "kubectl get deployments"
cat << EOF
NAME            READY   UP-TO-DATE   AVAILABLE   AGE
my-deployment                                    1s
EOF

pr
wait
NO_WAIT=1 p "kubectl get deployments"
cat << EOF
NAME                     READY   UP-TO-DATE   AVAILABLE   AGE
my-deployment            8/15    8            8           10s
my-deployment--us-east1  1/6     1            1           3s
my-deployment--us-west1  7/9     7            7           3s
EOF

pr
wait
NO_WAIT=1 p "kubectl get deployments"
cat << EOF
NAME                     READY   UP-TO-DATE   AVAILABLE   AGE
my-deployment            15/15   15           15          14s
my-deployment--us-east1  6/6     6            6           7s
my-deployment--us-west1  9/9     9            9           7s
EOF

pr
wait
NO_WAIT=1 p "kubectl get pods"
echo "error: the server doesn't have a resource type \"pods\""
