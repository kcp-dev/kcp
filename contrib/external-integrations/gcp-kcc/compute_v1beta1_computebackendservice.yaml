# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    cnrm.cloud.google.com/version: 1.45.0
  creationTimestamp: null
  labels:
    cnrm.cloud.google.com/managed-by-kcc: "true"
    cnrm.cloud.google.com/system: "true"
    cnrm.cloud.google.com/tf2crd: "true"
  name: computebackendservices.compute.cnrm.cloud.google.com
spec:
  additionalPrinterColumns:
  - JSONPath: .metadata.creationTimestamp
    name: Age
    type: date
  - JSONPath: .status.conditions[?(@.type=='Ready')].status
    description: When 'True', the most recent reconcile of the resource succeeded
    name: Ready
    type: string
  - JSONPath: .status.conditions[?(@.type=='Ready')].reason
    description: The reason for the value in 'Ready'
    name: Status
    type: string
  - JSONPath: .status.conditions[?(@.type=='Ready')].lastTransitionTime
    description: The last transition time for the value in 'Status'
    name: Status Age
    type: date
  group: compute.cnrm.cloud.google.com
  names:
    categories:
    - gcp
    kind: ComputeBackendService
    plural: computebackendservices
    shortNames:
    - gcpcomputebackendservice
    - gcpcomputebackendservices
    singular: computebackendservice
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'apiVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            affinityCookieTtlSec:
              description: |-
                Lifetime of cookies in seconds if session_affinity is
                GENERATED_COOKIE. If set to 0, the cookie is non-persistent and lasts
                only until the end of the browser session (or equivalent). The
                maximum allowed value for TTL is one day.

                When the load balancing scheme is INTERNAL, this field is not used.
              type: integer
            backend:
              description: The set of backends that serve this BackendService.
              items:
                properties:
                  balancingMode:
                    description: |-
                      Specifies the balancing mode for this backend.

                      For global HTTP(S) or TCP/SSL load balancing, the default is
                      UTILIZATION. Valid values are UTILIZATION, RATE (for HTTP(S))
                      and CONNECTION (for TCP/SSL). Default value: "UTILIZATION" Possible values: ["UTILIZATION", "RATE", "CONNECTION"]
                    type: string
                  capacityScaler:
                    description: |-
                      A multiplier applied to the group's maximum servicing capacity
                      (based on UTILIZATION, RATE or CONNECTION).

                      Default value is 1, which means the group will serve up to 100%
                      of its configured capacity (depending on balancingMode). A
                      setting of 0 means the group is completely drained, offering
                      0% of its available Capacity. Valid range is [0.0,1.0].
                    type: number
                  description:
                    description: |-
                      An optional description of this resource.
                      Provide this property when you create the resource.
                    type: string
                  group:
                    description: |-
                      Reference to a ComputeInstanceGroup or ComputeNetworkEndpointGroup
                      resource. In case of instance group this defines the list of
                      instances that serve traffic. Member virtual machine instances from
                      each instance group must live in the same zone as the instance
                      group itself. No two backends in a backend service are allowed to
                      use same Instance Group resource.

                      For Network Endpoint Groups this defines list of endpoints. All
                      endpoints of Network Endpoint Group must be hosted on instances
                      located in the same zone as the Network Endpoint Group.

                      Backend services cannot mix Instance Group and Network Endpoint
                      Group backends.

                      When the 'load_balancing_scheme' is INTERNAL, only instance groups
                      are supported.
                    oneOf:
                    - required:
                      - instanceGroupRef
                    - required:
                      - networkEndpointGroupRef
                    properties:
                      instanceGroupRef:
                        oneOf:
                        - not:
                            required:
                            - external
                          required:
                          - name
                        - not:
                            anyOf:
                            - required:
                              - name
                            - required:
                              - namespace
                          required:
                          - external
                        properties:
                          external:
                            description: The selfLink of a ComputeInstanceGroup.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                        type: object
                      networkEndpointGroupRef:
                        oneOf:
                        - not:
                            required:
                            - external
                          required:
                          - name
                        - not:
                            anyOf:
                            - required:
                              - name
                            - required:
                              - namespace
                          required:
                          - external
                        properties:
                          external:
                            description: The selfLink of a ComputeNetworkEndpointGroup.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                        type: object
                    type: object
                  maxConnections:
                    description: |-
                      The max number of simultaneous connections for the group. Can
                      be used with either CONNECTION or UTILIZATION balancing modes.

                      For CONNECTION mode, either maxConnections or one
                      of maxConnectionsPerInstance or maxConnectionsPerEndpoint,
                      as appropriate for group type, must be set.
                    type: integer
                  maxConnectionsPerEndpoint:
                    description: |-
                      The max number of simultaneous connections that a single backend
                      network endpoint can handle. This is used to calculate the
                      capacity of the group. Can be used in either CONNECTION or
                      UTILIZATION balancing modes.

                      For CONNECTION mode, either
                      maxConnections or maxConnectionsPerEndpoint must be set.
                    type: integer
                  maxConnectionsPerInstance:
                    description: |-
                      The max number of simultaneous connections that a single
                      backend instance can handle. This is used to calculate the
                      capacity of the group. Can be used in either CONNECTION or
                      UTILIZATION balancing modes.

                      For CONNECTION mode, either maxConnections or
                      maxConnectionsPerInstance must be set.
                    type: integer
                  maxRate:
                    description: |-
                      The max requests per second (RPS) of the group.

                      Can be used with either RATE or UTILIZATION balancing modes,
                      but required if RATE mode. For RATE mode, either maxRate or one
                      of maxRatePerInstance or maxRatePerEndpoint, as appropriate for
                      group type, must be set.
                    type: integer
                  maxRatePerEndpoint:
                    description: |-
                      The max requests per second (RPS) that a single backend network
                      endpoint can handle. This is used to calculate the capacity of
                      the group. Can be used in either balancing mode. For RATE mode,
                      either maxRate or maxRatePerEndpoint must be set.
                    type: number
                  maxRatePerInstance:
                    description: |-
                      The max requests per second (RPS) that a single backend
                      instance can handle. This is used to calculate the capacity of
                      the group. Can be used in either balancing mode. For RATE mode,
                      either maxRate or maxRatePerInstance must be set.
                    type: number
                  maxUtilization:
                    description: |-
                      Used when balancingMode is UTILIZATION. This ratio defines the
                      CPU utilization target for the group. The default is 0.8. Valid
                      range is [0.0, 1.0].
                    type: number
                required:
                - group
                type: object
              type: array
            cdnPolicy:
              description: Cloud CDN configuration for this BackendService.
              properties:
                cacheKeyPolicy:
                  description: The CacheKeyPolicy for this CdnPolicy.
                  properties:
                    includeHost:
                      description: If true requests to different hosts will be cached separately.
                      type: boolean
                    includeProtocol:
                      description: If true, http and https requests will be cached separately.
                      type: boolean
                    includeQueryString:
                      description: |-
                        If true, include query string parameters in the cache key
                        according to query_string_whitelist and
                        query_string_blacklist. If neither is set, the entire query
                        string will be included.

                        If false, the query string will be excluded from the cache
                        key entirely.
                      type: boolean
                    queryStringBlacklist:
                      description: |-
                        Names of query string parameters to exclude in cache keys.

                        All other parameters will be included. Either specify
                        query_string_whitelist or query_string_blacklist, not both.
                        '&' and '=' will be percent encoded and not treated as
                        delimiters.
                      items:
                        type: string
                      type: array
                    queryStringWhitelist:
                      description: |-
                        Names of query string parameters to include in cache keys.

                        All other parameters will be excluded. Either specify
                        query_string_whitelist or query_string_blacklist, not both.
                        '&' and '=' will be percent encoded and not treated as
                        delimiters.
                      items:
                        type: string
                      type: array
                  type: object
                cacheMode:
                  description: |-
                    Specifies the cache setting for all responses from this backend.
                    The possible values are: USE_ORIGIN_HEADERS, FORCE_CACHE_ALL and CACHE_ALL_STATIC Possible values: ["USE_ORIGIN_HEADERS", "FORCE_CACHE_ALL", "CACHE_ALL_STATIC"]
                  type: string
                clientTtl:
                  description: Specifies the maximum allowed TTL for cached content served by this origin.
                  type: integer
                defaultTtl:
                  description: |-
                    Specifies the default TTL for cached content served by this origin for responses
                    that do not have an existing valid TTL (max-age or s-max-age).
                  type: integer
                maxTtl:
                  description: Specifies the maximum allowed TTL for cached content served by this origin.
                  type: integer
                negativeCaching:
                  description: Negative caching allows per-status code TTLs to be set, in order to apply fine-grained caching for common errors or redirects.
                  type: boolean
                negativeCachingPolicy:
                  description: |-
                    Sets a cache TTL for the specified HTTP status code. negativeCaching must be enabled to configure negativeCachingPolicy.
                    Omitting the policy and leaving negativeCaching enabled will use Cloud CDN's default cache TTLs.
                  items:
                    properties:
                      code:
                        description: |-
                          The HTTP status code to define a TTL against. Only HTTP status codes 300, 301, 308, 404, 405, 410, 421, 451 and 501
                          can be specified as values, and you cannot specify a status code more than once.
                        type: integer
                      ttl:
                        description: |-
                          The TTL (in seconds) for which to cache responses with the corresponding status code. The maximum allowed value is 1800s
                          (30 minutes), noting that infrequently accessed objects may be evicted from the cache before the defined TTL.
                        type: integer
                    type: object
                  type: array
                serveWhileStale:
                  description: Serve existing content from the cache (if available) when revalidating content with the origin, or when an error is encountered when refreshing the cache.
                  type: integer
                signedUrlCacheMaxAgeSec:
                  description: |-
                    Maximum number of seconds the response to a signed URL request
                    will be considered fresh, defaults to 1hr (3600s). After this
                    time period, the response will be revalidated before
                    being served.

                    When serving responses to signed URL requests, Cloud CDN will
                    internally behave as though all responses from this backend had a
                    "Cache-Control: public, max-age=[TTL]" header, regardless of any
                    existing Cache-Control header. The actual headers served in
                    responses will not be altered.
                  type: integer
              type: object
            circuitBreakers:
              description: |-
                Settings controlling the volume of connections to a backend service. This field
                is applicable only when the load_balancing_scheme is set to INTERNAL_SELF_MANAGED.
              properties:
                connectTimeout:
                  description: The timeout for new network connections to hosts.
                  properties:
                    nanos:
                      description: |-
                        Span of time that's a fraction of a second at nanosecond
                        resolution. Durations less than one second are represented
                        with a 0 seconds field and a positive nanos field. Must
                        be from 0 to 999,999,999 inclusive.
                      type: integer
                    seconds:
                      description: |-
                        Span of time at a resolution of a second.
                        Must be from 0 to 315,576,000,000 inclusive.
                      type: integer
                  required:
                  - seconds
                  type: object
                maxConnections:
                  description: |-
                    The maximum number of connections to the backend cluster.
                    Defaults to 1024.
                  type: integer
                maxPendingRequests:
                  description: |-
                    The maximum number of pending requests to the backend cluster.
                    Defaults to 1024.
                  type: integer
                maxRequests:
                  description: |-
                    The maximum number of parallel requests to the backend cluster.
                    Defaults to 1024.
                  type: integer
                maxRequestsPerConnection:
                  description: |-
                    Maximum requests for a single backend connection. This parameter
                    is respected by both the HTTP/1.1 and HTTP/2 implementations. If
                    not specified, there is no limit. Setting this parameter to 1
                    will effectively disable keep alive.
                  type: integer
                maxRetries:
                  description: |-
                    The maximum number of parallel retries to the backend cluster.
                    Defaults to 3.
                  type: integer
              type: object
            connectionDrainingTimeoutSec:
              description: |-
                Time for which instance will be drained (not accept new
                connections, but still work to finish started).
              type: integer
            consistentHash:
              description: |-
                Consistent Hash-based load balancing can be used to provide soft session
                affinity based on HTTP headers, cookies or other properties. This load balancing
                policy is applicable only for HTTP connections. The affinity to a particular
                destination host will be lost when one or more hosts are added/removed from the
                destination service. This field specifies parameters that control consistent
                hashing. This field only applies if the load_balancing_scheme is set to
                INTERNAL_SELF_MANAGED. This field is only applicable when locality_lb_policy is
                set to MAGLEV or RING_HASH.
              properties:
                httpCookie:
                  description: |-
                    Hash is based on HTTP Cookie. This field describes a HTTP cookie
                    that will be used as the hash key for the consistent hash load
                    balancer. If the cookie is not present, it will be generated.
                    This field is applicable if the sessionAffinity is set to HTTP_COOKIE.
                  properties:
                    name:
                      description: Name of the cookie.
                      type: string
                    path:
                      description: Path to set for the cookie.
                      type: string
                    ttl:
                      description: Lifetime of the cookie.
                      properties:
                        nanos:
                          description: |-
                            Span of time that's a fraction of a second at nanosecond
                            resolution. Durations less than one second are represented
                            with a 0 seconds field and a positive nanos field. Must
                            be from 0 to 999,999,999 inclusive.
                          type: integer
                        seconds:
                          description: |-
                            Span of time at a resolution of a second.
                            Must be from 0 to 315,576,000,000 inclusive.
                          type: integer
                      required:
                      - seconds
                      type: object
                  type: object
                httpHeaderName:
                  description: |-
                    The hash based on the value of the specified header field.
                    This field is applicable if the sessionAffinity is set to HEADER_FIELD.
                  type: string
                minimumRingSize:
                  description: |-
                    The minimum number of virtual nodes to use for the hash ring.
                    Larger ring sizes result in more granular load
                    distributions. If the number of hosts in the load balancing pool
                    is larger than the ring size, each host will be assigned a single
                    virtual node.
                    Defaults to 1024.
                  type: integer
              type: object
            customRequestHeaders:
              description: |-
                Headers that the HTTP/S load balancer should add to proxied
                requests.
              items:
                type: string
              type: array
            customResponseHeaders:
              description: |-
                Headers that the HTTP/S load balancer should add to proxied
                responses.
              items:
                type: string
              type: array
            description:
              description: An optional description of this resource.
              type: string
            enableCdn:
              description: If true, enable Cloud CDN for this BackendService.
              type: boolean
            failoverPolicy:
              description: Policy for failovers.
              properties:
                disableConnectionDrainOnFailover:
                  description: |-
                    On failover or failback, this field indicates whether connection drain
                    will be honored. Setting this to true has the following effect: connections
                    to the old active pool are not drained. Connections to the new active pool
                    use the timeout of 10 min (currently fixed). Setting to false has the
                    following effect: both old and new connections will have a drain timeout
                    of 10 min.
                    This can be set to true only if the protocol is TCP.
                    The default is false.
                  type: boolean
                dropTrafficIfUnhealthy:
                  description: |-
                    This option is used only when no healthy VMs are detected in the primary
                    and backup instance groups. When set to true, traffic is dropped. When
                    set to false, new connections are sent across all VMs in the primary group.
                    The default is false.
                  type: boolean
                failoverRatio:
                  description: |-
                    The value of the field must be in [0, 1]. If the ratio of the healthy
                    VMs in the primary backend is at or below this number, traffic arriving
                    at the load-balanced IP will be directed to the failover backend.
                    In case where 'failoverRatio' is not set or all the VMs in the backup
                    backend are unhealthy, the traffic will be directed back to the primary
                    backend in the "force" mode, where traffic will be spread to the healthy
                    VMs with the best effort, or to all VMs when no VM is healthy.
                    This field is only used with l4 load balancing.
                  type: number
              type: object
            healthChecks:
              items:
                description: |-
                  The health check resources for health checking this
                  ComputeBackendService. Currently at most one health check can be
                  specified, and a health check is required.
                oneOf:
                - required:
                  - healthCheckRef
                - required:
                  - httpHealthCheckRef
                properties:
                  healthCheckRef:
                    oneOf:
                    - not:
                        required:
                        - external
                      required:
                      - name
                    - not:
                        anyOf:
                        - required:
                          - name
                        - required:
                          - namespace
                      required:
                      - external
                    properties:
                      external:
                        description: The selfLink of a ComputeHealthCheck.
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                    type: object
                  httpHealthCheckRef:
                    oneOf:
                    - not:
                        required:
                        - external
                      required:
                      - name
                    - not:
                        anyOf:
                        - required:
                          - name
                        - required:
                          - namespace
                      required:
                      - external
                    properties:
                      external:
                        description: The selfLink of a ComputeHTTPHealthCheck.
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                    type: object
                type: object
              type: array
            iap:
              description: Settings for enabling Cloud Identity Aware Proxy
              properties:
                oauth2ClientId:
                  description: OAuth2 Client ID for IAP
                  type: string
                oauth2ClientSecret:
                  description: OAuth2 Client Secret for IAP
                  oneOf:
                  - not:
                      required:
                      - valueFrom
                    required:
                    - value
                  - not:
                      required:
                      - value
                    required:
                    - valueFrom
                  properties:
                    value:
                      description: Value of the field. Cannot be used if 'valueFrom' is specified.
                      type: string
                    valueFrom:
                      description: Source for the field's value. Cannot be used if 'value' is specified.
                      properties:
                        secretKeyRef:
                          description: Reference to a value with the given key in the given Secret in the resource's namespace.
                          properties:
                            key:
                              description: Key that identifies the value to be extracted.
                              type: string
                            name:
                              description: Name of the Secret to extract a value from.
                              type: string
                          required:
                          - name
                          - key
                          type: object
                      type: object
                  type: object
                oauth2ClientSecretSha256:
                  description: OAuth2 Client Secret SHA-256 for IAP
                  type: string
              required:
              - oauth2ClientId
              - oauth2ClientSecret
              type: object
            loadBalancingScheme:
              description: |-
                Immutable. Indicates whether the backend service will be used with internal or
                external load balancing. A backend service created for one type of
                load balancing cannot be used with the other. Default value: "EXTERNAL" Possible values: ["EXTERNAL", "INTERNAL_SELF_MANAGED"]
              type: string
            localityLbPolicy:
              description: |-
                The load balancing algorithm used within the scope of the locality.
                The possible values are -

                * ROUND_ROBIN - This is a simple policy in which each healthy backend
                                is selected in round robin order.

                * LEAST_REQUEST - An O(1) algorithm which selects two random healthy
                                  hosts and picks the host which has fewer active requests.

                * RING_HASH - The ring/modulo hash load balancer implements consistent
                              hashing to backends. The algorithm has the property that the
                              addition/removal of a host from a set of N hosts only affects
                              1/N of the requests.

                * RANDOM - The load balancer selects a random healthy host.

                * ORIGINAL_DESTINATION - Backend host is selected based on the client
                                         connection metadata, i.e., connections are opened
                                         to the same address as the destination address of
                                         the incoming connection before the connection
                                         was redirected to the load balancer.

                * MAGLEV - used as a drop in replacement for the ring hash load balancer.
                           Maglev is not as stable as ring hash but has faster table lookup
                           build times and host selection times. For more information about
                           Maglev, refer to https://ai.google/research/pubs/pub44824

                This field is applicable only when the load_balancing_scheme is set to
                INTERNAL_SELF_MANAGED. Possible values: ["ROUND_ROBIN", "LEAST_REQUEST", "RING_HASH", "RANDOM", "ORIGINAL_DESTINATION", "MAGLEV"]
              type: string
            location:
              description: 'Location represents the geographical location of the ComputeBackendService. Specify a region name or "global" for global resources. Reference: GCP definition of regions/zones (https://cloud.google.com/compute/docs/regions-zones/)'
              type: string
            logConfig:
              description: |-
                This field denotes the logging options for the load balancer traffic served by this backend service.
                If logging is enabled, logs will be exported to Stackdriver.
              properties:
                enable:
                  description: Whether to enable logging for the load balancer traffic served by this backend service.
                  type: boolean
                sampleRate:
                  description: |-
                    This field can only be specified if logging is enabled for this backend service. The value of
                    the field must be in [0, 1]. This configures the sampling rate of requests to the load balancer
                    where 1.0 means all logged requests are reported and 0.0 means no logged requests are reported.
                    The default value is 1.0.
                  type: number
              type: object
            networkRef:
              description: |-
                The network to which this backend service belongs.  This field can
                only be specified when the load balancing scheme is set to
                INTERNAL.
              oneOf:
              - not:
                  required:
                  - external
                required:
                - name
              - not:
                  anyOf:
                  - required:
                    - name
                  - required:
                    - namespace
                required:
                - external
              properties:
                external:
                  description: The selfLink of a ComputeNetwork.
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
              type: object
            outlierDetection:
              description: |-
                Settings controlling eviction of unhealthy hosts from the load balancing pool.
                This field is applicable only when the load_balancing_scheme is set
                to INTERNAL_SELF_MANAGED.
              properties:
                baseEjectionTime:
                  description: |-
                    The base time that a host is ejected for. The real time is equal to the base
                    time multiplied by the number of times the host has been ejected. Defaults to
                    30000ms or 30s.
                  properties:
                    nanos:
                      description: |-
                        Span of time that's a fraction of a second at nanosecond resolution. Durations
                        less than one second are represented with a 0 'seconds' field and a positive
                        'nanos' field. Must be from 0 to 999,999,999 inclusive.
                      type: integer
                    seconds:
                      description: |-
                        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
                        inclusive.
                      type: integer
                  required:
                  - seconds
                  type: object
                consecutiveErrors:
                  description: |-
                    Number of errors before a host is ejected from the connection pool. When the
                    backend host is accessed over HTTP, a 5xx return code qualifies as an error.
                    Defaults to 5.
                  type: integer
                consecutiveGatewayFailure:
                  description: |-
                    The number of consecutive gateway failures (502, 503, 504 status or connection
                    errors that are mapped to one of those status codes) before a consecutive
                    gateway failure ejection occurs. Defaults to 5.
                  type: integer
                enforcingConsecutiveErrors:
                  description: |-
                    The percentage chance that a host will be actually ejected when an outlier
                    status is detected through consecutive 5xx. This setting can be used to disable
                    ejection or to ramp it up slowly. Defaults to 100.
                  type: integer
                enforcingConsecutiveGatewayFailure:
                  description: |-
                    The percentage chance that a host will be actually ejected when an outlier
                    status is detected through consecutive gateway failures. This setting can be
                    used to disable ejection or to ramp it up slowly. Defaults to 0.
                  type: integer
                enforcingSuccessRate:
                  description: |-
                    The percentage chance that a host will be actually ejected when an outlier
                    status is detected through success rate statistics. This setting can be used to
                    disable ejection or to ramp it up slowly. Defaults to 100.
                  type: integer
                interval:
                  description: |-
                    Time interval between ejection sweep analysis. This can result in both new
                    ejections as well as hosts being returned to service. Defaults to 10 seconds.
                  properties:
                    nanos:
                      description: |-
                        Span of time that's a fraction of a second at nanosecond resolution. Durations
                        less than one second are represented with a 0 'seconds' field and a positive
                        'nanos' field. Must be from 0 to 999,999,999 inclusive.
                      type: integer
                    seconds:
                      description: |-
                        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
                        inclusive.
                      type: integer
                  required:
                  - seconds
                  type: object
                maxEjectionPercent:
                  description: |-
                    Maximum percentage of hosts in the load balancing pool for the backend service
                    that can be ejected. Defaults to 10%.
                  type: integer
                successRateMinimumHosts:
                  description: |-
                    The number of hosts in a cluster that must have enough request volume to detect
                    success rate outliers. If the number of hosts is less than this setting, outlier
                    detection via success rate statistics is not performed for any host in the
                    cluster. Defaults to 5.
                  type: integer
                successRateRequestVolume:
                  description: |-
                    The minimum number of total requests that must be collected in one interval (as
                    defined by the interval duration above) to include this host in success rate
                    based outlier detection. If the volume is lower than this setting, outlier
                    detection via success rate statistics is not performed for that host. Defaults
                    to 100.
                  type: integer
                successRateStdevFactor:
                  description: |-
                    This factor is used to determine the ejection threshold for success rate outlier
                    ejection. The ejection threshold is the difference between the mean success
                    rate, and the product of this factor and the standard deviation of the mean
                    success rate: mean - (stdev * success_rate_stdev_factor). This factor is divided
                    by a thousand to get a double. That is, if the desired factor is 1.9, the
                    runtime value should be 1900. Defaults to 1900.
                  type: integer
              type: object
            portName:
              description: |-
                Name of backend port. The same name should appear in the instance
                groups referenced by this service. Required when the load balancing
                scheme is EXTERNAL.
              type: string
            protocol:
              description: |-
                The protocol this BackendService uses to communicate with backends.
                The default is HTTP. **NOTE**: HTTP2 is only valid for beta HTTP/2 load balancer
                types and may result in errors if used with the GA API. Possible values: ["HTTP", "HTTPS", "HTTP2", "TCP", "SSL", "GRPC"]
              type: string
            resourceID:
              description: Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default.
              type: string
            securityPolicyRef:
              description: The security policy associated with this backend service.
              oneOf:
              - not:
                  required:
                  - external
                required:
                - name
              - not:
                  anyOf:
                  - required:
                    - name
                  - required:
                    - namespace
                required:
                - external
              properties:
                external:
                  description: The selfLink of a ComputeSecurityPolicy.
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
              type: object
            sessionAffinity:
              description: |-
                Type of session affinity to use. The default is NONE. Session affinity is
                not applicable if the protocol is UDP. Possible values: ["NONE", "CLIENT_IP", "CLIENT_IP_PORT_PROTO", "CLIENT_IP_PROTO", "GENERATED_COOKIE", "HEADER_FIELD", "HTTP_COOKIE"]
              type: string
            timeoutSec:
              description: |-
                How many seconds to wait for the backend before considering it a
                failed request. Default is 30 seconds. Valid range is [1, 86400].
              type: integer
          required:
          - location
          type: object
        status:
          properties:
            conditions:
              description: Conditions represent the latest available observation of the resource's current state.
              items:
                properties:
                  lastTransitionTime:
                    description: Last time the condition transitioned from one status to another.
                    type: string
                  message:
                    description: Human-readable message indicating details about last transition.
                    type: string
                  reason:
                    description: Unique, one-word, CamelCase reason for the condition's last transition.
                    type: string
                  status:
                    description: Status is the status of the condition. Can be True, False, Unknown.
                    type: string
                  type:
                    description: Type is the type of the condition.
                    type: string
                type: object
              type: array
            creationTimestamp:
              description: Creation timestamp in RFC3339 text format.
              type: string
            fingerprint:
              description: |-
                Fingerprint of this resource. A hash of the contents stored in this
                object. This field is used in optimistic locking.
              type: string
            selfLink:
              type: string
          type: object
      required:
      - spec
      type: object
  version: v1beta1
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
