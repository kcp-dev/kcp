# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    cnrm.cloud.google.com/version: 1.45.0
  creationTimestamp: null
  labels:
    cnrm.cloud.google.com/managed-by-kcc: "true"
    cnrm.cloud.google.com/system: "true"
    cnrm.cloud.google.com/tf2crd: "true"
  name: computenodetemplates.compute.cnrm.cloud.google.com
spec:
  additionalPrinterColumns:
  - JSONPath: .metadata.creationTimestamp
    name: Age
    type: date
  - JSONPath: .status.conditions[?(@.type=='Ready')].status
    description: When 'True', the most recent reconcile of the resource succeeded
    name: Ready
    type: string
  - JSONPath: .status.conditions[?(@.type=='Ready')].reason
    description: The reason for the value in 'Ready'
    name: Status
    type: string
  - JSONPath: .status.conditions[?(@.type=='Ready')].lastTransitionTime
    description: The last transition time for the value in 'Status'
    name: Status Age
    type: date
  group: compute.cnrm.cloud.google.com
  names:
    categories:
    - gcp
    kind: ComputeNodeTemplate
    plural: computenodetemplates
    shortNames:
    - gcpcomputenodetemplate
    - gcpcomputenodetemplates
    singular: computenodetemplate
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'apiVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            cpuOvercommitType:
              description: 'Immutable. CPU overcommit. Default value: "NONE" Possible values: ["ENABLED", "NONE"]'
              type: string
            description:
              description: Immutable. An optional textual description of the resource.
              type: string
            nodeType:
              description: |-
                Immutable. Node type to use for nodes group that are created from this template.
                Only one of nodeTypeFlexibility and nodeType can be specified.
              type: string
            nodeTypeFlexibility:
              description: |-
                Immutable. Flexible properties for the desired node type. Node groups that
                use this node template will create nodes of a type that matches
                these properties. Only one of nodeTypeFlexibility and nodeType can
                be specified.
              properties:
                cpus:
                  description: Immutable. Number of virtual CPUs to use.
                  type: string
                localSsd:
                  description: Use local SSD
                  type: string
                memory:
                  description: Immutable. Physical memory available to the node, defined in MB.
                  type: string
              type: object
            region:
              description: |-
                Immutable. Region where nodes using the node template will be created.
                If it is not provided, the provider region is used.
              type: string
            resourceID:
              description: Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default.
              type: string
            serverBinding:
              description: |-
                Immutable. The server binding policy for nodes using this template. Determines
                where the nodes should restart following a maintenance event.
              properties:
                type:
                  description: |-
                    Immutable. Type of server binding policy. If 'RESTART_NODE_ON_ANY_SERVER',
                    nodes using this template will restart on any physical server
                    following a maintenance event.

                    If 'RESTART_NODE_ON_MINIMAL_SERVER', nodes using this template
                    will restart on the same physical server following a maintenance
                    event, instead of being live migrated to or restarted on a new
                    physical server. This option may be useful if you are using
                    software licenses tied to the underlying server characteristics
                    such as physical sockets or cores, to avoid the need for
                    additional licenses when maintenance occurs. However, VMs on such
                    nodes will experience outages while maintenance is applied. Possible values: ["RESTART_NODE_ON_ANY_SERVER", "RESTART_NODE_ON_MINIMAL_SERVERS"]
                  type: string
              required:
              - type
              type: object
          required:
          - region
          type: object
        status:
          properties:
            conditions:
              description: Conditions represent the latest available observation of the resource's current state.
              items:
                properties:
                  lastTransitionTime:
                    description: Last time the condition transitioned from one status to another.
                    type: string
                  message:
                    description: Human-readable message indicating details about last transition.
                    type: string
                  reason:
                    description: Unique, one-word, CamelCase reason for the condition's last transition.
                    type: string
                  status:
                    description: Status is the status of the condition. Can be True, False, Unknown.
                    type: string
                  type:
                    description: Type is the type of the condition.
                    type: string
                type: object
              type: array
            creationTimestamp:
              description: Creation timestamp in RFC3339 text format.
              type: string
            selfLink:
              type: string
          type: object
      required:
      - spec
      type: object
  version: v1beta1
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
