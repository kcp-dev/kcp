/*
Copyright The KCP Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// ClusterBindingSpecApplyConfiguration represents a declarative configuration of the ClusterBindingSpec type for use
// with apply.
type ClusterBindingSpecApplyConfiguration struct {
	KubeconfigSecretRef *LocalSecretKeyRefApplyConfiguration `json:"kubeconfigSecretRef,omitempty"`
	ProviderPrettyName  *string                              `json:"providerPrettyName,omitempty"`
	ServiceProviderSpec *runtime.RawExtension                `json:"serviceProviderSpec,omitempty"`
}

// ClusterBindingSpecApplyConfiguration constructs a declarative configuration of the ClusterBindingSpec type for use with
// apply.
func ClusterBindingSpec() *ClusterBindingSpecApplyConfiguration {
	return &ClusterBindingSpecApplyConfiguration{}
}

// WithKubeconfigSecretRef sets the KubeconfigSecretRef field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the KubeconfigSecretRef field is set to the value of the last call.
func (b *ClusterBindingSpecApplyConfiguration) WithKubeconfigSecretRef(value *LocalSecretKeyRefApplyConfiguration) *ClusterBindingSpecApplyConfiguration {
	b.KubeconfigSecretRef = value
	return b
}

// WithProviderPrettyName sets the ProviderPrettyName field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ProviderPrettyName field is set to the value of the last call.
func (b *ClusterBindingSpecApplyConfiguration) WithProviderPrettyName(value string) *ClusterBindingSpecApplyConfiguration {
	b.ProviderPrettyName = &value
	return b
}

// WithServiceProviderSpec sets the ServiceProviderSpec field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ServiceProviderSpec field is set to the value of the last call.
func (b *ClusterBindingSpecApplyConfiguration) WithServiceProviderSpec(value runtime.RawExtension) *ClusterBindingSpecApplyConfiguration {
	b.ServiceProviderSpec = &value
	return b
}
