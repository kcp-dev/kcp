apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: persistentvolumeclaims.core
spec:
  conversion:
    strategy: None
  group: ""
  names:
    kind: PersistentVolumeClaim
    listKind: PersistentVolumeClaimList
    plural: persistentvolumeclaims
    shortNames:
    - pvc
    singular: persistentvolumeclaim
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: PersistentVolumeClaim is a user's request for and claim to a
          persistent volume
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: 'Spec defines the desired characteristics of a volume requested
              by a pod author. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
            properties:
              accessModes:
                description: 'AccessModes contains the desired access modes the volume
                  should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                items:
                  type: string
                type: array
              dataSource:
                description: 'This field can be used to specify either: * An existing
                  VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) *
                  An existing PVC (PersistentVolumeClaim) If the provisioner or an
                  external controller can support the specified data source, it will
                  create a new volume based on the contents of the specified data
                  source. If the AnyVolumeDataSource feature gate is enabled, this
                  field will always have the same contents as the DataSourceRef field.'
                properties:
                  apiGroup:
                    description: APIGroup is the group for the resource being referenced.
                      If APIGroup is not specified, the specified Kind must be in
                      the core API group. For any other third-party types, APIGroup
                      is required.
                    type: string
                  kind:
                    description: Kind is the type of resource being referenced
                    type: string
                  name:
                    description: Name is the name of resource being referenced
                    type: string
                required:
                - kind
                - name
                type: object
              dataSourceRef:
                description: |-
                  Specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any local object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the DataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, both fields (DataSource and DataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. There are two important differences between DataSource and DataSourceRef: * While DataSource only allows two specific types of objects, DataSourceRef
                    allows any non-core object, as well as PersistentVolumeClaim objects.
                  * While DataSource ignores disallowed values (dropping them), DataSourceRef
                    preserves all values, and generates an error if a disallowed value is
                    specified.
                  (Alpha) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
                properties:
                  apiGroup:
                    description: APIGroup is the group for the resource being referenced.
                      If APIGroup is not specified, the specified Kind must be in
                      the core API group. For any other third-party types, APIGroup
                      is required.
                    type: string
                  kind:
                    description: Kind is the type of resource being referenced
                    type: string
                  name:
                    description: Name is the name of resource being referenced
                    type: string
                required:
                - kind
                - name
                type: object
              resources:
                description: 'Resources represents the minimum resources the volume
                  should have. If RecoverVolumeExpansionFailure feature is enabled
                  users are allowed to specify resource requirements that are lower
                  than previous value but must still be higher than capacity recorded
                  in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                properties:
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Limits describes the maximum amount of compute resources
                      allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Requests describes the minimum amount of compute
                      resources required. If Requests is omitted for a container,
                      it defaults to Limits if that is explicitly specified, otherwise
                      to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                type: object
              selector:
                description: A label query over volumes to consider for binding.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single
                      {key,value} in the matchLabels map is equivalent to an element
                      of matchExpressions, whose key field is "key", the operator
                      is "In", and the values array contains only "value". The requirements
                      are ANDed.
                    type: object
                type: object
              storageClassName:
                description: 'Name of the StorageClass required by the claim. More
                  info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                type: string
              volumeMode:
                description: volumeMode defines what type of volume is required by
                  the claim. Value of Filesystem is implied when not included in claim
                  spec.
                type: string
              volumeName:
                description: VolumeName is the binding reference to the PersistentVolume
                  backing this claim.
                type: string
            type: object
          status:
            description: 'Status represents the current information/status of a persistent
              volume claim. Read-only. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
            properties:
              accessModes:
                description: 'AccessModes contains the actual access modes the volume
                  backing the PVC has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                items:
                  type: string
                type: array
              allocatedResources:
                additionalProperties:
                  anyOf:
                  - type: integer
                  - type: string
                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                  x-kubernetes-int-or-string: true
                description: The storage resource within AllocatedResources tracks
                  the capacity allocated to a PVC. It may be larger than the actual
                  capacity when a volume expansion operation is requested. For storage
                  quota, the larger value from allocatedResources and PVC.spec.resources
                  is used. If allocatedResources is not set, PVC.spec.resources alone
                  is used for quota calculation. If a volume expansion capacity request
                  is lowered, allocatedResources is only lowered if there are no expansion
                  operations in progress and if the actual volume capacity is equal
                  or lower than the requested capacity. This is an alpha field and
                  requires enabling RecoverVolumeExpansionFailure feature.
                type: object
              capacity:
                additionalProperties:
                  anyOf:
                  - type: integer
                  - type: string
                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                  x-kubernetes-int-or-string: true
                description: Represents the actual resources of the underlying volume.
                type: object
              conditions:
                description: Current Condition of persistent volume claim. If underlying
                  persistent volume is being resized then the Condition will be set
                  to 'ResizeStarted'.
                items:
                  description: PersistentVolumeClaimCondition contails details about
                    state of pvc
                  properties:
                    lastProbeTime:
                      description: Last time we probed the condition.
                      format: date-time
                      type: string
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, this should be a short, machine understandable
                        string that gives the reason for condition's last transition.
                        If it reports "ResizeStarted" that means the underlying persistent
                        volume is being resized.
                      type: string
                    status:
                      type: string
                    type:
                      description: |2+



                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              phase:
                description: |+
                  Phase represents the current phase of PersistentVolumeClaim.

                type: string
              resizeStatus:
                description: ResizeStatus stores status of resize operation. ResizeStatus
                  is not set by default but when expansion is complete resizeStatus
                  is set to empty string by resize controller or kubelet. This is
                  an alpha field and requires enabling RecoverVolumeExpansionFailure
                  feature.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1
