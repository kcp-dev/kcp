/*
Copyright The KCP Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by cluster-lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"

	kcplisters "github.com/kcp-dev/client-go/third_party/k8s.io/client-go/listers"
	"github.com/kcp-dev/logicalcluster/v3"

	kcpv1alpha1 "github.com/kcp-dev/kcp/sdk/apis/tenancy/v1alpha1"
)

// WorkspaceAuthenticationConfigurationClusterLister helps list WorkspaceAuthenticationConfigurations across all workspaces,
// or scope down to a WorkspaceAuthenticationConfigurationLister for one workspace.
// All objects returned here must be treated as read-only.
type WorkspaceAuthenticationConfigurationClusterLister interface {
	// List lists all WorkspaceAuthenticationConfigurations in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*kcpv1alpha1.WorkspaceAuthenticationConfiguration, err error)
	// Cluster returns a lister that can list and get WorkspaceAuthenticationConfigurations in one workspace.
	Cluster(clusterName logicalcluster.Name) WorkspaceAuthenticationConfigurationLister
	WorkspaceAuthenticationConfigurationClusterListerExpansion
}

// workspaceAuthenticationConfigurationClusterLister implements the WorkspaceAuthenticationConfigurationClusterLister interface.
type workspaceAuthenticationConfigurationClusterLister struct {
	kcplisters.ResourceClusterIndexer[*kcpv1alpha1.WorkspaceAuthenticationConfiguration]
}

var _ WorkspaceAuthenticationConfigurationClusterLister = new(workspaceAuthenticationConfigurationClusterLister)

// NewWorkspaceAuthenticationConfigurationClusterLister returns a new WorkspaceAuthenticationConfigurationClusterLister.
// We assume that the indexer:
// - is fed by a cross-workspace LIST+WATCH
// - uses kcpcache.MetaClusterNamespaceKeyFunc as the key function
// - has the kcpcache.ClusterIndex as an index
func NewWorkspaceAuthenticationConfigurationClusterLister(indexer cache.Indexer) WorkspaceAuthenticationConfigurationClusterLister {
	return &workspaceAuthenticationConfigurationClusterLister{
		kcplisters.NewCluster[*kcpv1alpha1.WorkspaceAuthenticationConfiguration](indexer, kcpv1alpha1.Resource("workspaceauthenticationconfiguration")),
	}
}

// Cluster scopes the lister to one workspace, allowing users to list and get WorkspaceAuthenticationConfigurations.
func (l *workspaceAuthenticationConfigurationClusterLister) Cluster(clusterName logicalcluster.Name) WorkspaceAuthenticationConfigurationLister {
	return &workspaceAuthenticationConfigurationLister{
		l.ResourceClusterIndexer.WithCluster(clusterName),
	}
}

// workspaceAuthenticationConfigurationLister can list all WorkspaceAuthenticationConfigurations inside a workspace
// or scope down to a WorkspaceAuthenticationConfigurationNamespaceLister for one namespace.
type workspaceAuthenticationConfigurationLister struct {
	kcplisters.ResourceIndexer[*kcpv1alpha1.WorkspaceAuthenticationConfiguration]
}

var _ WorkspaceAuthenticationConfigurationLister = new(workspaceAuthenticationConfigurationLister)

// WorkspaceAuthenticationConfigurationLister can list all WorkspaceAuthenticationConfigurations, or get one in particular.
// All objects returned here must be treated as read-only.
type WorkspaceAuthenticationConfigurationLister interface {
	// List lists all WorkspaceAuthenticationConfigurations in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*kcpv1alpha1.WorkspaceAuthenticationConfiguration, err error)
	// Get retrieves the WorkspaceAuthenticationConfiguration from the indexer for a given workspace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*kcpv1alpha1.WorkspaceAuthenticationConfiguration, error)
	WorkspaceAuthenticationConfigurationListerExpansion
}

// NewWorkspaceAuthenticationConfigurationLister returns a new WorkspaceAuthenticationConfigurationLister.
// We assume that the indexer:
// - is fed by a cross-workspace LIST+WATCH
// - uses kcpcache.MetaClusterNamespaceKeyFunc as the key function
// - has the kcpcache.ClusterIndex as an index
func NewWorkspaceAuthenticationConfigurationLister(indexer cache.Indexer) WorkspaceAuthenticationConfigurationLister {
	return &workspaceAuthenticationConfigurationLister{
		kcplisters.New[*kcpv1alpha1.WorkspaceAuthenticationConfiguration](indexer, kcpv1alpha1.Resource("workspaceauthenticationconfiguration")),
	}
}

// workspaceAuthenticationConfigurationScopedLister can list all WorkspaceAuthenticationConfigurations inside a workspace
// or scope down to a WorkspaceAuthenticationConfigurationNamespaceLister.
type workspaceAuthenticationConfigurationScopedLister struct {
	kcplisters.ResourceIndexer[*kcpv1alpha1.WorkspaceAuthenticationConfiguration]
}
