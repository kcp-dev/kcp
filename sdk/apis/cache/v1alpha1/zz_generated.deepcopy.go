//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright The KCP Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1alpha1

import (
	conditionsv1alpha1 "github.com/kcp-dev/kcp/sdk/apis/third_party/conditions/apis/conditions/v1alpha1"
	corev1 "k8s.io/api/core/v1"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIResourceSchemaSource) DeepCopyInto(out *APIResourceSchemaSource) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIResourceSchemaSource.
func (in *APIResourceSchemaSource) DeepCopy() *APIResourceSchemaSource {
	if in == nil {
		return nil
	}
	out := new(APIResourceSchemaSource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CRDSchemaSource) DeepCopyInto(out *CRDSchemaSource) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CRDSchemaSource.
func (in *CRDSchemaSource) DeepCopy() *CRDSchemaSource {
	if in == nil {
		return nil
	}
	out := new(CRDSchemaSource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CachedObject) DeepCopyInto(out *CachedObject) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CachedObject.
func (in *CachedObject) DeepCopy() *CachedObject {
	if in == nil {
		return nil
	}
	out := new(CachedObject)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CachedObject) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CachedObjectList) DeepCopyInto(out *CachedObjectList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CachedObject, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CachedObjectList.
func (in *CachedObjectList) DeepCopy() *CachedObjectList {
	if in == nil {
		return nil
	}
	out := new(CachedObjectList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CachedObjectList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CachedObjectSpec) DeepCopyInto(out *CachedObjectSpec) {
	*out = *in
	in.Raw.DeepCopyInto(&out.Raw)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CachedObjectSpec.
func (in *CachedObjectSpec) DeepCopy() *CachedObjectSpec {
	if in == nil {
		return nil
	}
	out := new(CachedObjectSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CachedResource) DeepCopyInto(out *CachedResource) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CachedResource.
func (in *CachedResource) DeepCopy() *CachedResource {
	if in == nil {
		return nil
	}
	out := new(CachedResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CachedResource) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CachedResourceEndpoint) DeepCopyInto(out *CachedResourceEndpoint) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CachedResourceEndpoint.
func (in *CachedResourceEndpoint) DeepCopy() *CachedResourceEndpoint {
	if in == nil {
		return nil
	}
	out := new(CachedResourceEndpoint)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CachedResourceEndpointSlice) DeepCopyInto(out *CachedResourceEndpointSlice) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	out.Spec = in.Spec
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CachedResourceEndpointSlice.
func (in *CachedResourceEndpointSlice) DeepCopy() *CachedResourceEndpointSlice {
	if in == nil {
		return nil
	}
	out := new(CachedResourceEndpointSlice)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CachedResourceEndpointSlice) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CachedResourceEndpointSliceList) DeepCopyInto(out *CachedResourceEndpointSliceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CachedResourceEndpointSlice, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CachedResourceEndpointSliceList.
func (in *CachedResourceEndpointSliceList) DeepCopy() *CachedResourceEndpointSliceList {
	if in == nil {
		return nil
	}
	out := new(CachedResourceEndpointSliceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CachedResourceEndpointSliceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CachedResourceEndpointSliceSpec) DeepCopyInto(out *CachedResourceEndpointSliceSpec) {
	*out = *in
	out.CachedResource = in.CachedResource
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CachedResourceEndpointSliceSpec.
func (in *CachedResourceEndpointSliceSpec) DeepCopy() *CachedResourceEndpointSliceSpec {
	if in == nil {
		return nil
	}
	out := new(CachedResourceEndpointSliceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CachedResourceEndpointSliceStatus) DeepCopyInto(out *CachedResourceEndpointSliceStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make(conditionsv1alpha1.Conditions, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CachedResourceEndpoints != nil {
		in, out := &in.CachedResourceEndpoints, &out.CachedResourceEndpoints
		*out = make([]CachedResourceEndpoint, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CachedResourceEndpointSliceStatus.
func (in *CachedResourceEndpointSliceStatus) DeepCopy() *CachedResourceEndpointSliceStatus {
	if in == nil {
		return nil
	}
	out := new(CachedResourceEndpointSliceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CachedResourceList) DeepCopyInto(out *CachedResourceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CachedResource, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CachedResourceList.
func (in *CachedResourceList) DeepCopy() *CachedResourceList {
	if in == nil {
		return nil
	}
	out := new(CachedResourceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CachedResourceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CachedResourceReference) DeepCopyInto(out *CachedResourceReference) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CachedResourceReference.
func (in *CachedResourceReference) DeepCopy() *CachedResourceReference {
	if in == nil {
		return nil
	}
	out := new(CachedResourceReference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CachedResourceSchemaSource) DeepCopyInto(out *CachedResourceSchemaSource) {
	*out = *in
	if in.APIResourceSchema != nil {
		in, out := &in.APIResourceSchema, &out.APIResourceSchema
		*out = new(APIResourceSchemaSource)
		**out = **in
	}
	if in.CRD != nil {
		in, out := &in.CRD, &out.CRD
		*out = new(CRDSchemaSource)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CachedResourceSchemaSource.
func (in *CachedResourceSchemaSource) DeepCopy() *CachedResourceSchemaSource {
	if in == nil {
		return nil
	}
	out := new(CachedResourceSchemaSource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CachedResourceSpec) DeepCopyInto(out *CachedResourceSpec) {
	*out = *in
	out.GroupVersionResource = in.GroupVersionResource
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = new(Identity)
		(*in).DeepCopyInto(*out)
	}
	if in.LabelSelector != nil {
		in, out := &in.LabelSelector, &out.LabelSelector
		*out = new(v1.LabelSelector)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CachedResourceSpec.
func (in *CachedResourceSpec) DeepCopy() *CachedResourceSpec {
	if in == nil {
		return nil
	}
	out := new(CachedResourceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CachedResourceStatus) DeepCopyInto(out *CachedResourceStatus) {
	*out = *in
	if in.ResourceCounts != nil {
		in, out := &in.ResourceCounts, &out.ResourceCounts
		*out = new(ResourceCount)
		**out = **in
	}
	if in.ResourceSchemaSource != nil {
		in, out := &in.ResourceSchemaSource, &out.ResourceSchemaSource
		*out = new(CachedResourceSchemaSource)
		(*in).DeepCopyInto(*out)
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make(conditionsv1alpha1.Conditions, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CachedResourceStatus.
func (in *CachedResourceStatus) DeepCopy() *CachedResourceStatus {
	if in == nil {
		return nil
	}
	out := new(CachedResourceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupVersionResource) DeepCopyInto(out *GroupVersionResource) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupVersionResource.
func (in *GroupVersionResource) DeepCopy() *GroupVersionResource {
	if in == nil {
		return nil
	}
	out := new(GroupVersionResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Identity) DeepCopyInto(out *Identity) {
	*out = *in
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(corev1.SecretReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Identity.
func (in *Identity) DeepCopy() *Identity {
	if in == nil {
		return nil
	}
	out := new(Identity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceCount) DeepCopyInto(out *ResourceCount) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceCount.
func (in *ResourceCount) DeepCopy() *ResourceCount {
	if in == nil {
		return nil
	}
	out := new(ResourceCount)
	in.DeepCopyInto(out)
	return out
}
