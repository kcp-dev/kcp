apiVersion: apis.kcp.io/v1alpha1
kind: APIResourceSchema
metadata:
  creationTimestamp: null
  name: v240408-678f36869.logicalclusters.core.kcp.io
spec:
  group: core.kcp.io
  names:
    categories:
    - kcp
    kind: LogicalCluster
    listKind: LogicalClusterList
    plural: logicalclusters
    singular: logicalcluster
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - description: The current phase (e.g. Scheduling, Initializing, Ready, Deleting)
      jsonPath: .status.phase
      name: Phase
      type: string
    - description: URL to access the logical cluster
      jsonPath: .status.URL
      name: URL
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      description: "LogicalCluster describes the current logical cluster. It is used
        to authorize requests to the logical cluster and to track state. \n A LogicalCluster
        is always named \"cluster\"."
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          properties:
            name:
              enum:
              - cluster
              type: string
          type: object
        spec:
          default: {}
          description: LogicalClusterSpec is the specification of the LogicalCluster
            resource.
          properties:
            directlyDeletable:
              default: false
              description: DirectlyDeletable indicates that this logical cluster can
                be directly deleted by the user from within by deleting the LogicalCluster
                object.
              type: boolean
            initializers:
              description: initializers are set on creation by the system and copied
                to status when initialization starts.
              items:
                description: LogicalClusterInitializer is a unique string corresponding
                  to a logical cluster initialization controller.
                pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(:[a-z0-9]([-a-z0-9]*[a-z0-9])?)*(:[a-z0-9][a-z0-9]([-a-z0-9]*[a-z0-9])?))|(system:.+)$
                type: string
              type: array
            owner:
              description: "owner is a reference to a resource controlling the life-cycle
                of this logical cluster. On deletion of the LogicalCluster, the finalizer
                core.kcp.io/logicalcluster is removed from the owner. \n When this
                object is deleted, but the owner is not deleted, the owner is deleted
                too."
              properties:
                apiVersion:
                  description: apiVersion is the group and API version of the owner.
                  pattern: ^([^/]+/)?[^/]+$
                  type: string
                cluster:
                  description: cluster is the logical cluster in which the owner is
                    located.
                  minLength: 1
                  type: string
                name:
                  description: name is the name of the owner.
                  minLength: 1
                  type: string
                namespace:
                  description: namespace is the optional namespace of the owner.
                  type: string
                resource:
                  description: resource is API resource to access the owner.
                  minLength: 1
                  type: string
                uid:
                  description: UID is the UID of the owner.
                  type: string
              required:
              - apiVersion
              - cluster
              - name
              - resource
              - uid
              type: object
          type: object
        status:
          default: {}
          description: LogicalClusterStatus communicates the observed state of the
            Workspace.
          properties:
            URL:
              description: url is the address under which the Kubernetes-cluster-like
                endpoint can be found. This URL can be used to access the logical
                cluster with standard Kubernetes client libraries and command line
                tools.
              type: string
            conditions:
              description: Current processing state of the LogicalCluster.
              items:
                description: Condition defines an observation of a object operational
                  state.
                properties:
                  lastTransitionTime:
                    description: Last time the condition transitioned from one status
                      to another. This should be when the underlying condition changed.
                      If that is not known, then using the time when the API field
                      changed is acceptable.
                    format: date-time
                    type: string
                  message:
                    description: A human readable message indicating details about
                      the transition. This field may be empty.
                    type: string
                  reason:
                    description: The reason for the condition's last transition in
                      CamelCase. The specific API may choose whether or not this field
                      is considered a guaranteed API. This field may not be empty.
                    type: string
                  severity:
                    description: Severity provides an explicit classification of Reason
                      code, so the users or machines can immediately understand the
                      current situation and act accordingly. The Severity field MUST
                      be set only when Status=False.
                    type: string
                  status:
                    description: Status of the condition, one of True, False, Unknown.
                    type: string
                  type:
                    description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                      Many .condition.type values are consistent across resources
                      like Available, but because arbitrary conditions can be useful
                      (see .node.status.conditions), the ability to deconflict is
                      important.
                    type: string
                required:
                - lastTransitionTime
                - status
                - type
                type: object
              type: array
            initializers:
              description: initializers are set on creation by the system and must
                be cleared by a controller before the logical cluster can be used.
                The LogicalCluster object will stay in the phase "Initializing" state
                until all initializers are cleared.
              items:
                description: LogicalClusterInitializer is a unique string corresponding
                  to a logical cluster initialization controller.
                pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(:[a-z0-9]([-a-z0-9]*[a-z0-9])?)*(:[a-z0-9][a-z0-9]([-a-z0-9]*[a-z0-9])?))|(system:.+)$
                type: string
              type: array
            phase:
              default: Scheduling
              description: Phase of the logical cluster (Initializing, Ready).
              enum:
              - Scheduling
              - Initializing
              - Ready
              - NotReady
              type: string
          type: object
      type: object
    served: true
    storage: true
    subresources:
      status: {}
