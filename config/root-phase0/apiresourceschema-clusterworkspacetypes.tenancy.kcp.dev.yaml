apiVersion: apis.kcp.dev/v1alpha1
kind: APIResourceSchema
metadata:
  creationTimestamp: null
  name: v220706-bc1e346b.clusterworkspacetypes.tenancy.kcp.dev
spec:
  group: tenancy.kcp.dev
  names:
    categories:
    - kcp
    kind: ClusterWorkspaceType
    listKind: ClusterWorkspaceTypeList
    plural: clusterworkspacetypes
    singular: clusterworkspacetype
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      description: ClusterWorkspaceType specifies behaviour of workspaces of this
        type.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          properties:
            name:
              maxLength: 63
              minLength: 1
              not:
                enum:
                - root
                - system
                - any
              pattern: ^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$
              type: string
          type: object
        spec:
          properties:
            additionalWorkspaceLabels:
              additionalProperties:
                type: string
              description: additionalWorkspaceLabels are a set of labels that will
                be added to a ClusterWorkspace on creation.
              type: object
            allowedChildren:
              default:
                any: true
              description: "allowedChildren is a set of ClusterWorkspaceTypes that
                can be created in a workspace of this type. \n By default, no type
                is allowed. This means no other workspace can be nested within a workspace
                of the given type. Use allowedChildren.any=true to be permissive with
                child types."
              oneOf:
              - required:
                - any
              - required:
                - types
              properties:
                any:
                  description: any matches all types if set.
                  type: boolean
                types:
                  description: "types is a list of ClusterWorkspaceTypes that match.
                    \n By default, no type matches. Use any to be permissive with
                    matching types."
                  items:
                    description: ClusterWorkspaceTypeReference is a globally unique,
                      fully qualified reference to a cluster workspace type.
                    properties:
                      name:
                        description: name is the name of the ClusterWorkspaceType
                        pattern: ^[A-Z][a-zA-Z0-9]+$
                        type: string
                      path:
                        description: path is an absolute reference to the workspace
                          that owns this type, e.g. root:org:ws.
                        pattern: ^root(:[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                        type: string
                    required:
                    - name
                    - path
                    type: object
                  type: array
              type: object
            allowedParents:
              default:
                any: true
              description: "allowedParents is a set of ClusterWorkspaceTypes that
                this type can be created in. \n By default, no type is allowed. This
                means no other workspace can have a workspace of the given type nested
                inside it. Use allowedParents.any=true to be permissive with child
                types."
              oneOf:
              - required:
                - any
              - required:
                - types
              properties:
                any:
                  description: any matches all types if set.
                  type: boolean
                types:
                  description: "types is a list of ClusterWorkspaceTypes that match.
                    \n By default, no type matches. Use any to be permissive with
                    matching types."
                  items:
                    description: ClusterWorkspaceTypeReference is a globally unique,
                      fully qualified reference to a cluster workspace type.
                    properties:
                      name:
                        description: name is the name of the ClusterWorkspaceType
                        pattern: ^[A-Z][a-zA-Z0-9]+$
                        type: string
                      path:
                        description: path is an absolute reference to the workspace
                          that owns this type, e.g. root:org:ws.
                        pattern: ^root(:[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                        type: string
                    required:
                    - name
                    - path
                    type: object
                  type: array
              type: object
            defaultChildWorkspaceType:
              default:
                name: Universal
                path: root
              description: defaultChildWorkspaceType is the ClusterWorkspaceType that
                will be used by default if another, nested ClusterWorkspace is created
                in a workspace of this type. When this field is unset, the user must
                specify a type when creating nested workspaces.
              properties:
                name:
                  description: name is the name of the ClusterWorkspaceType
                  pattern: ^[A-Z][a-zA-Z0-9]+$
                  type: string
                path:
                  description: path is an absolute reference to the workspace that
                    owns this type, e.g. root:org:ws.
                  pattern: ^root(:[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                  type: string
              required:
              - name
              - path
              type: object
            extend:
              description: "extend allows this ClusterWorkspaceType to add functionality
                from other types. When some ClusterWorkspaceType `root:org:Alpha`
                lists another type `root:org:Beta` in spec.extend.with, the following
                occurs: - new ClusterWorkspaces of type `root:org:Alpha` get the initializers
                from both   types added, if they are enabled - any ClusterWorkspaceType
                that allows `root:org:Beta` as an allowed child or parent   type will
                implicitly allow `root:org:Alpha` as well \n This field is immutable."
              properties:
                with:
                  description: with are ClusterWorkspaceTypes whose initializers are
                    added to the list for the owning type, and for whom the owning
                    type becomes an alias, as long as all of their required types
                    are not mentioned in without.
                  items:
                    description: ClusterWorkspaceTypeReference is a globally unique,
                      fully qualified reference to a cluster workspace type.
                    properties:
                      name:
                        description: name is the name of the ClusterWorkspaceType
                        pattern: ^[A-Z][a-zA-Z0-9]+$
                        type: string
                      path:
                        description: path is an absolute reference to the workspace
                          that owns this type, e.g. root:org:ws.
                        pattern: ^root(:[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                        type: string
                    required:
                    - name
                    - path
                    type: object
                  type: array
                without:
                  description: without are ClusterWorkspaceTypes whose initializers
                    are removed from the list computed for "with", and for whom the
                    owning type does not become an alias. If a composite type in "with"
                    has some part removed in "without", the composite type does not
                    become an alias.
                  items:
                    description: ClusterWorkspaceTypeReference is a globally unique,
                      fully qualified reference to a cluster workspace type.
                    properties:
                      name:
                        description: name is the name of the ClusterWorkspaceType
                        pattern: ^[A-Z][a-zA-Z0-9]+$
                        type: string
                      path:
                        description: path is an absolute reference to the workspace
                          that owns this type, e.g. root:org:ws.
                        pattern: ^root(:[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                        type: string
                    required:
                    - name
                    - path
                    type: object
                  type: array
              type: object
            initializer:
              description: "initializer determines if this ClusterWorkspaceType has
                an associated initializing controller. These controllers are used
                to add functionality to a ClusterWorkspace; all controllers must finish
                their work before the ClusterWorkspace becomes ready for use. \n One
                initializing controller is supported per ClusterWorkspaceType; the
                identifier for this initializer will be a colon-delimited string using
                the workspace in which the ClusterWorkspaceType is defined, and the
                type's name. For example, if a ClusterWorkspaceType `example` is created
                in the `root:org` workspace, the implicit initializer name is `root:org:Example`."
              type: boolean
          type: object
        status:
          description: ClusterWorkspaceTypeStatus defines the observed state of ClusterWorkspaceType.
          properties:
            conditions:
              description: conditions is a list of conditions that apply to the APIExport.
              items:
                description: Condition defines an observation of a object operational
                  state.
                properties:
                  lastTransitionTime:
                    description: Last time the condition transitioned from one status
                      to another. This should be when the underlying condition changed.
                      If that is not known, then using the time when the API field
                      changed is acceptable.
                    format: date-time
                    type: string
                  message:
                    description: A human readable message indicating details about
                      the transition. This field may be empty.
                    type: string
                  reason:
                    description: The reason for the condition's last transition in
                      CamelCase. The specific API may choose whether or not this field
                      is considered a guaranteed API. This field may not be empty.
                    type: string
                  severity:
                    description: Severity provides an explicit classification of Reason
                      code, so the users or machines can immediately understand the
                      current situation and act accordingly. The Severity field MUST
                      be set only when Status=False.
                    type: string
                  status:
                    description: Status of the condition, one of True, False, Unknown.
                    type: string
                  type:
                    description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                      Many .condition.type values are consistent across resources
                      like Available, but because arbitrary conditions can be useful
                      (see .node.status.conditions), the ability to deconflict is
                      important.
                    type: string
                required:
                - lastTransitionTime
                - status
                - type
                type: object
              type: array
            initializers:
              description: initializers are the list of initializing controller references
                which need to be added to new ClusterWorkspaces of this type, resolved
                from the specified type compositions.
              items:
                description: ClusterWorkspaceInitializer is a unique string corresponding
                  to a cluster workspace initialization controller for the given type
                  of workspaces.
                pattern: ^root(:[a-z0-9]([-a-z0-9]*[a-z0-9])?)*(:[A-Z][a-z0-9]([-a-z0-9]*[a-z0-9])?)$
                type: string
              type: array
            typeAliases:
              description: typeAliases are other ClusterWorkspaceTypes for which this
                type is an alias. For example, if this type is `root:org:Alpha` and
                the `.status.typeAliases` list contains `root:org:Beta`, any parent
                or child restriction which allows `root:org:Beta` will implicitly
                also allow `root:org:Alpha` as it is an alias.
              items:
                description: ClusterWorkspaceTypeReference is a globally unique, fully
                  qualified reference to a cluster workspace type.
                properties:
                  name:
                    description: name is the name of the ClusterWorkspaceType
                    pattern: ^[A-Z][a-zA-Z0-9]+$
                    type: string
                  path:
                    description: path is an absolute reference to the workspace that
                      owns this type, e.g. root:org:ws.
                    pattern: ^root(:[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                    type: string
                required:
                - name
                - path
                type: object
              type: array
            virtualWorkspaces:
              description: virtualWorkspaces contains all APIExport virtual workspace
                URLs.
              items:
                properties:
                  url:
                    description: url is a ClusterWorkspaceType initialization virtual
                      workspace URL.
                    minLength: 1
                    type: string
                required:
                - url
                type: object
              type: array
          type: object
      type: object
    served: true
    storage: true
    subresources:
      status: {}
