apiVersion: apis.kcp.dev/v1alpha1
kind: APIResourceSchema
metadata:
  creationTimestamp: null
  name: v221112-05936e27.clusterworkspacetypes.tenancy.kcp.dev
spec:
  group: tenancy.kcp.dev
  names:
    categories:
    - kcp
    kind: ClusterWorkspaceType
    listKind: ClusterWorkspaceTypeList
    plural: clusterworkspacetypes
    singular: clusterworkspacetype
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      description: ClusterWorkspaceType specifies behaviour of workspaces of this
        type.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          properties:
            name:
              maxLength: 63
              minLength: 1
              not:
                enum:
                - system
                - any
              pattern: ^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$
              type: string
          type: object
        spec:
          properties:
            additionalWorkspaceLabels:
              additionalProperties:
                type: string
              description: additionalWorkspaceLabels are a set of labels that will
                be added to a ClusterWorkspace on creation.
              type: object
            defaultAPIBindings:
              description: defaultAPIBindings are the APIs to bind during initialization
                of workspaces created from this type. The APIBinding names will be
                generated dynamically.
              items:
                description: APIExportReference provides the fields necessary to resolve
                  an APIExport.
                properties:
                  exportName:
                    description: exportName is the name of the APIExport.
                    type: string
                  path:
                    description: path is the fully-qualified path to the workspace
                      containing the APIExport.
                    pattern: ^root(:[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                    type: string
                required:
                - exportName
                - path
                type: object
              type: array
              x-kubernetes-list-map-keys:
              - path
              - exportName
              x-kubernetes-list-type: map
            defaultChildWorkspaceType:
              default:
                name: universal
                path: root
              description: defaultChildWorkspaceType is the ClusterWorkspaceType that
                will be used by default if another, nested ClusterWorkspace is created
                in a workspace of this type. When this field is unset, the user must
                specify a type when creating nested workspaces. Extending another
                ClusterWorkspaceType does not inherit its defaultChildWorkspaceType.
              properties:
                name:
                  description: name is the name of the ClusterWorkspaceType
                  pattern: ^[a-z]([a-z0-9-]{0,61}[a-z0-9])?
                  type: string
                path:
                  description: path is an absolute reference to the workspace that
                    owns this type, e.g. root:org:ws.
                  pattern: ^root(:[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                  type: string
              required:
              - name
              type: object
            extend:
              description: "extend is a list of other ClusterWorkspaceTypes whose
                initializers and limitAllowedChildren and limitAllowedParents this
                ClusterWorkspaceType is inheriting. By (transitively) extending another
                ClusterWorkspaceType, this ClusterWorkspaceType will be considered
                as that other type in evaluation of limitAllowedChildren and limitAllowedParents
                constraints. \n A dependency cycle stop this ClusterWorkspaceType
                from being admitted as the type of a ClusterWorkspace. \n A non-existing
                dependency stop this ClusterWorkspaceType from being admitted as the
                type of a ClusterWorkspace."
              properties:
                with:
                  description: with are ClusterWorkspaceTypes whose initializers are
                    added to the list for the owning type, and for whom the owning
                    type becomes an alias, as long as all of their required types
                    are not mentioned in without.
                  items:
                    description: ClusterWorkspaceTypeReference is a globally unique,
                      fully qualified reference to a cluster workspace type.
                    properties:
                      name:
                        description: name is the name of the ClusterWorkspaceType
                        pattern: ^[a-z]([a-z0-9-]{0,61}[a-z0-9])?
                        type: string
                      path:
                        description: path is an absolute reference to the workspace
                          that owns this type, e.g. root:org:ws.
                        pattern: ^root(:[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                        type: string
                    required:
                    - name
                    type: object
                  type: array
              type: object
            initializer:
              description: "initializer determines if this ClusterWorkspaceType has
                an associated initializing controller. These controllers are used
                to add functionality to a ClusterWorkspace; all controllers must finish
                their work before the ClusterWorkspace becomes ready for use. \n One
                initializing controller is supported per ClusterWorkspaceType; the
                identifier for this initializer will be a colon-delimited string using
                the workspace in which the ClusterWorkspaceType is defined, and the
                type's name. For example, if a ClusterWorkspaceType `example` is created
                in the `root:org` workspace, the implicit initializer name is `root:org:Example`."
              type: boolean
            limitAllowedChildren:
              description: limitAllowedChildren specifies constraints for sub-workspaces
                created in workspaces of this type. These are in addition to child
                constraints of types this one extends.
              oneOf:
              - required:
                - none
              - required:
                - types
              properties:
                none:
                  description: none means that no type matches.
                  type: boolean
                types:
                  description: "types is a list of ClusterWorkspaceTypes that match.
                    A workspace type extending another workspace type automatically
                    is considered as that extended type as well (even transitively).
                    \n An empty list matches all types."
                  items:
                    description: ClusterWorkspaceTypeReference is a globally unique,
                      fully qualified reference to a cluster workspace type.
                    properties:
                      name:
                        description: name is the name of the ClusterWorkspaceType
                        pattern: ^[a-z]([a-z0-9-]{0,61}[a-z0-9])?
                        type: string
                      path:
                        description: path is an absolute reference to the workspace
                          that owns this type, e.g. root:org:ws.
                        pattern: ^root(:[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                        type: string
                    required:
                    - name
                    type: object
                  minItems: 1
                  type: array
              type: object
            limitAllowedParents:
              description: limitAllowedParents specifies constraints for the parent
                workspace that workspaces of this type are created in. These are in
                addition to parent constraints of types this one extends.
              properties:
                none:
                  description: none means that no type matches.
                  type: boolean
                types:
                  description: "types is a list of ClusterWorkspaceTypes that match.
                    A workspace type extending another workspace type automatically
                    is considered as that extended type as well (even transitively).
                    \n An empty list matches all types."
                  items:
                    description: ClusterWorkspaceTypeReference is a globally unique,
                      fully qualified reference to a cluster workspace type.
                    properties:
                      name:
                        description: name is the name of the ClusterWorkspaceType
                        pattern: ^[a-z]([a-z0-9-]{0,61}[a-z0-9])?
                        type: string
                      path:
                        description: path is an absolute reference to the workspace
                          that owns this type, e.g. root:org:ws.
                        pattern: ^root(:[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                        type: string
                    required:
                    - name
                    type: object
                  minItems: 1
                  type: array
              type: object
          type: object
        status:
          description: ClusterWorkspaceTypeStatus defines the observed state of ClusterWorkspaceType.
          properties:
            conditions:
              description: conditions is a list of conditions that apply to the APIExport.
              items:
                description: Condition defines an observation of a object operational
                  state.
                properties:
                  lastTransitionTime:
                    description: Last time the condition transitioned from one status
                      to another. This should be when the underlying condition changed.
                      If that is not known, then using the time when the API field
                      changed is acceptable.
                    format: date-time
                    type: string
                  message:
                    description: A human readable message indicating details about
                      the transition. This field may be empty.
                    type: string
                  reason:
                    description: The reason for the condition's last transition in
                      CamelCase. The specific API may choose whether or not this field
                      is considered a guaranteed API. This field may not be empty.
                    type: string
                  severity:
                    description: Severity provides an explicit classification of Reason
                      code, so the users or machines can immediately understand the
                      current situation and act accordingly. The Severity field MUST
                      be set only when Status=False.
                    type: string
                  status:
                    description: Status of the condition, one of True, False, Unknown.
                    type: string
                  type:
                    description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                      Many .condition.type values are consistent across resources
                      like Available, but because arbitrary conditions can be useful
                      (see .node.status.conditions), the ability to deconflict is
                      important.
                    type: string
                required:
                - lastTransitionTime
                - status
                - type
                type: object
              type: array
            virtualWorkspaces:
              description: virtualWorkspaces contains all APIExport virtual workspace
                URLs.
              items:
                properties:
                  url:
                    description: url is a ClusterWorkspaceType initialization virtual
                      workspace URL.
                    minLength: 1
                    type: string
                required:
                - url
                type: object
              type: array
          type: object
      type: object
    served: true
    storage: true
    subresources:
      status: {}
