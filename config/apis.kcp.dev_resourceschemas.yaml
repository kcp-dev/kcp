
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: resourceschemas.apis.kcp.dev
spec:
  group: apis.kcp.dev
  names:
    categories:
    - kcp
    kind: ResourceSchema
    listKind: ResourceSchemaList
    plural: resourceschemas
    singular: resourceschema
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ResourceSchema describes a resource, identified by (group, version,
          resource, schema).
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec holds the desired state.
            properties:
              group:
                description: group is the API group of the defined custom resource.
                  The custom resources are served under `/apis/<group>/...`. Must
                  match the name of the CustomResourceDefinition (in the form `<names.plural>.<group>`).
                type: string
              names:
                description: names specify the resource and kind names for the custom
                  resource.
                properties:
                  categories:
                    description: categories is a list of grouped resources this custom
                      resource belongs to (e.g. 'all'). This is published in API discovery
                      documents, and used by clients to support invocations like `kubectl
                      get all`.
                    items:
                      type: string
                    type: array
                  kind:
                    description: kind is the serialized kind of the resource. It is
                      normally CamelCase and singular. Custom resource instances will
                      use this value as the `kind` attribute in API calls.
                    type: string
                  listKind:
                    description: listKind is the serialized kind of the list for this
                      resource. Defaults to "`kind`List".
                    type: string
                  plural:
                    description: plural is the plural name of the resource to serve.
                      The custom resources are served under `/apis/<group>/<version>/.../<plural>`.
                      Must match the name of the CustomResourceDefinition (in the
                      form `<names.plural>.<group>`). Must be all lowercase.
                    type: string
                  shortNames:
                    description: shortNames are short names for the resource, exposed
                      in API discovery documents, and used by clients to support invocations
                      like `kubectl get <shortname>`. It must be all lowercase.
                    items:
                      type: string
                    type: array
                  singular:
                    description: singular is the singular name of the resource. It
                      must be all lowercase. Defaults to lowercased `kind`.
                    type: string
                required:
                - kind
                - plural
                type: object
              scope:
                description: scope indicates whether the defined custom resource is
                  cluster- or namespace-scoped. Allowed values are `Cluster` and `Namespaced`.
                type: string
              version:
                description: version is the API version of the defined custom resource.
                properties:
                  additionalPrinterColumns:
                    description: additionalPrinterColumns specifies additional columns
                      returned in Table output. See https://kubernetes.io/docs/reference/using-api/api-concepts/#receiving-resources-as-tables
                      for details. If no columns are specified, a single column displaying
                      the age of the custom resource is used.
                    items:
                      description: CustomResourceColumnDefinition specifies a column
                        for server side printing.
                      properties:
                        description:
                          description: description is a human readable description
                            of this column.
                          type: string
                        format:
                          description: format is an optional OpenAPI type definition
                            for this column. The 'name' format is applied to the primary
                            identifier column to assist in clients identifying column
                            is the resource name. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types
                            for details.
                          type: string
                        jsonPath:
                          description: jsonPath is a simple JSON path (i.e. with array
                            notation) which is evaluated against each custom resource
                            to produce the value for this column.
                          type: string
                        name:
                          description: name is a human readable name for the column.
                          type: string
                        priority:
                          description: priority is an integer defining the relative
                            importance of this column compared to others. Lower numbers
                            are considered higher priority. Columns that may be omitted
                            in limited space scenarios should be given a priority
                            greater than 0.
                          format: int32
                          type: integer
                        type:
                          description: type is an OpenAPI type definition for this
                            column. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types
                            for details.
                          type: string
                      required:
                      - jsonPath
                      - name
                      - type
                      type: object
                    type: array
                  deprecated:
                    description: deprecated indicates this version of the custom resource
                      API is deprecated. When set to true, API requests to this version
                      receive a warning header in the server response. Defaults to
                      false.
                    type: boolean
                  deprecationWarning:
                    description: deprecationWarning overrides the default warning
                      returned to API clients. May only be set when `deprecated` is
                      true. The default warning indicates this version is deprecated
                      and recommends use of the newest served version of equal or
                      greater stability, if one exists.
                    type: string
                  name:
                    description: name is the version name, e.g. “v1”, “v2beta1”, etc.
                      The custom resources are served under this version at `/apis/<group>/<version>/...`
                      if `served` is true.
                    type: string
                  schema:
                    description: schema describes the schema used for validation,
                      pruning, and defaulting of this version of the custom resource.
                    properties:
                      openAPIV3Schema:
                        description: openAPIV3Schema is the OpenAPI v3 schema to use
                          for validation and pruning.
                        properties:
                          $ref:
                            type: string
                          $schema:
                            description: JSONSchemaURL represents a schema url.
                            type: string
                          additionalItems:
                            description: JSONSchemaPropsOrBool represents JSONSchemaProps
                              or a boolean value. Defaults to true for the boolean
                              property.
                            type: object
                          additionalProperties:
                            description: JSONSchemaPropsOrBool represents JSONSchemaProps
                              or a boolean value. Defaults to true for the boolean
                              property.
                            type: object
                          allOf:
                            items: {}
                            type: array
                          anyOf:
                            items: {}
                            type: array
                          default:
                            description: default is a default value for undefined
                              object fields. Defaulting is a beta feature under the
                              CustomResourceDefaulting feature gate. Defaulting requires
                              spec.preserveUnknownFields to be false.
                            x-kubernetes-preserve-unknown-fields: true
                          definitions:
                            additionalProperties: {}
                            description: JSONSchemaDefinitions contains the models
                              explicitly defined in this spec.
                            type: object
                          dependencies:
                            additionalProperties:
                              description: JSONSchemaPropsOrStringArray represents
                                a JSONSchemaProps or a string array.
                              type: object
                            description: JSONSchemaDependencies represent a dependencies
                              property.
                            type: object
                          description:
                            type: string
                          enum:
                            items:
                              x-kubernetes-preserve-unknown-fields: true
                            type: array
                          example:
                            x-kubernetes-preserve-unknown-fields: true
                          exclusiveMaximum:
                            type: boolean
                          exclusiveMinimum:
                            type: boolean
                          externalDocs:
                            description: ExternalDocumentation allows referencing
                              an external resource for extended documentation.
                            properties:
                              description:
                                type: string
                              url:
                                type: string
                            type: object
                          format:
                            description: "format is an OpenAPI v3 format string. Unknown
                              formats are ignored. The following formats are validated:
                              \n - bsonobjectid: a bson object ID, i.e. a 24 characters
                              hex string - uri: an URI as parsed by Golang net/url.ParseRequestURI
                              - email: an email address as parsed by Golang net/mail.ParseAddress
                              - hostname: a valid representation for an Internet host
                              name, as defined by RFC 1034, section 3.1 [RFC1034].
                              - ipv4: an IPv4 IP as parsed by Golang net.ParseIP -
                              ipv6: an IPv6 IP as parsed by Golang net.ParseIP - cidr:
                              a CIDR as parsed by Golang net.ParseCIDR - mac: a MAC
                              address as parsed by Golang net.ParseMAC - uuid: an
                              UUID that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{12}$
                              - uuid3: an UUID3 that allows uppercase defined by the
                              regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?3[0-9a-f]{3}-?[0-9a-f]{4}-?[0-9a-f]{12}$
                              - uuid4: an UUID4 that allows uppercase defined by the
                              regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?4[0-9a-f]{3}-?[89ab][0-9a-f]{3}-?[0-9a-f]{12}$
                              - uuid5: an UUID5 that allows uppercase defined by the
                              regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?5[0-9a-f]{3}-?[89ab][0-9a-f]{3}-?[0-9a-f]{12}$
                              - isbn: an ISBN10 or ISBN13 number string like \"0321751043\"
                              or \"978-0321751041\" - isbn10: an ISBN10 number string
                              like \"0321751043\" - isbn13: an ISBN13 number string
                              like \"978-0321751041\" - creditcard: a credit card
                              number defined by the regex ^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\\\d{3})\\\\d{11})$
                              with any non digit characters mixed in - ssn: a U.S.
                              social security number following the regex ^\\\\d{3}[-
                              ]?\\\\d{2}[- ]?\\\\d{4}$ - hexcolor: an hexadecimal
                              color code like \"#FFFFFF: following the regex ^#?([0-9a-fA-F]{3}|[0-9a-fA-F]{6})$
                              - rgbcolor: an RGB color code like rgb like \"rgb(255,255,2559\"
                              - byte: base64 encoded binary data - password: any kind
                              of string - date: a date string like \"2006-01-02\"
                              as defined by full-date in RFC3339 - duration: a duration
                              string like \"22 ns\" as parsed by Golang time.ParseDuration
                              or compatible with Scala duration format - datetime:
                              a date time string like \"2014-12-15T19:30:20.000Z\"
                              as defined by date-time in RFC3339."
                            type: string
                          id:
                            type: string
                          items:
                            description: JSONSchemaPropsOrArray represents a value
                              that can either be a JSONSchemaProps or an array of
                              JSONSchemaProps. Mainly here for serialization purposes.
                            type: object
                          maxItems:
                            format: int64
                            type: integer
                          maxLength:
                            format: int64
                            type: integer
                          maxProperties:
                            format: int64
                            type: integer
                          maximum: {}
                          minItems:
                            format: int64
                            type: integer
                          minLength:
                            format: int64
                            type: integer
                          minProperties:
                            format: int64
                            type: integer
                          minimum: {}
                          multipleOf: {}
                          not: {}
                          nullable:
                            type: boolean
                          oneOf:
                            items: {}
                            type: array
                          pattern:
                            type: string
                          patternProperties:
                            additionalProperties: {}
                            type: object
                          properties:
                            additionalProperties: {}
                            type: object
                          required:
                            items:
                              type: string
                            type: array
                          title:
                            type: string
                          type:
                            type: string
                          uniqueItems:
                            type: boolean
                          x-kubernetes-embedded-resource:
                            description: x-kubernetes-embedded-resource defines that
                              the value is an embedded Kubernetes runtime.Object,
                              with TypeMeta and ObjectMeta. The type must be object.
                              It is allowed to further restrict the embedded object.
                              kind, apiVersion and metadata are validated automatically.
                              x-kubernetes-preserve-unknown-fields is allowed to be
                              true, but does not have to be if the object is fully
                              specified (up to kind, apiVersion, metadata).
                            type: boolean
                          x-kubernetes-int-or-string:
                            description: "x-kubernetes-int-or-string specifies that
                              this value is either an integer or a string. If this
                              is true, an empty type is allowed and type as child
                              of anyOf is permitted if following one of the following
                              patterns: \n 1) anyOf:    - type: integer    - type:
                              string 2) allOf:    - anyOf:      - type: integer      -
                              type: string    - ... zero or more"
                            type: boolean
                          x-kubernetes-list-map-keys:
                            description: "x-kubernetes-list-map-keys annotates an
                              array with the x-kubernetes-list-type `map` by specifying
                              the keys used as the index of the map. \n This tag MUST
                              only be used on lists that have the \"x-kubernetes-list-type\"
                              extension set to \"map\". Also, the values specified
                              for this attribute must be a scalar typed field of the
                              child structure (no nesting is supported). \n The properties
                              specified must either be required or have a default
                              value, to ensure those properties are present for all
                              list items."
                            items:
                              type: string
                            type: array
                          x-kubernetes-list-type:
                            description: "x-kubernetes-list-type annotates an array
                              to further describe its topology. This extension must
                              only be used on lists and may have 3 possible values:
                              \n 1) `atomic`: the list is treated as a single entity,
                              like a scalar.      Atomic lists will be entirely replaced
                              when updated. This extension      may be used on any
                              type of list (struct, scalar, ...). 2) `set`:      Sets
                              are lists that must not have multiple items with the
                              same value. Each      value must be a scalar, an object
                              with x-kubernetes-map-type `atomic` or an      array
                              with x-kubernetes-list-type `atomic`. 3) `map`:      These
                              lists are like maps in that their elements have a non-index
                              key      used to identify them. Order is preserved upon
                              merge. The map tag      must only be used on a list
                              with elements of type object. Defaults to atomic for
                              arrays."
                            type: string
                          x-kubernetes-map-type:
                            description: "x-kubernetes-map-type annotates an object
                              to further describe its topology. This extension must
                              only be used when type is object and may have 2 possible
                              values: \n 1) `granular`:      These maps are actual
                              maps (key-value pairs) and each fields are independent
                              \     from each other (they can each be manipulated
                              by separate actors). This is      the default behaviour
                              for all maps. 2) `atomic`: the list is treated as a
                              single entity, like a scalar.      Atomic maps will
                              be entirely replaced when updated."
                            type: string
                          x-kubernetes-preserve-unknown-fields:
                            description: x-kubernetes-preserve-unknown-fields stops
                              the API server decoding step from pruning fields which
                              are not specified in the validation schema. This affects
                              fields recursively, but switches back to normal pruning
                              behaviour if nested properties or additionalProperties
                              are specified in the schema. This can either be true
                              or undefined. False is forbidden.
                            type: boolean
                        type: object
                    type: object
                  served:
                    description: served is a flag enabling/disabling this version
                      from being served via REST APIs
                    type: boolean
                  storage:
                    description: storage indicates this version should be used when
                      persisting custom resources to storage. There must be exactly
                      one version with storage=true.
                    type: boolean
                  subresources:
                    description: subresources specify what subresources this version
                      of the defined custom resource have.
                    properties:
                      scale:
                        description: scale indicates the custom resource should serve
                          a `/scale` subresource that returns an `autoscaling/v1`
                          Scale object.
                        properties:
                          labelSelectorPath:
                            description: 'labelSelectorPath defines the JSON path
                              inside of a custom resource that corresponds to Scale
                              `status.selector`. Only JSON paths without the array
                              notation are allowed. Must be a JSON Path under `.status`
                              or `.spec`. Must be set to work with HorizontalPodAutoscaler.
                              The field pointed by this JSON path must be a string
                              field (not a complex selector struct) which contains
                              a serialized label selector in string form. More info:
                              https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions#scale-subresource
                              If there is no value under the given path in the custom
                              resource, the `status.selector` value in the `/scale`
                              subresource will default to the empty string.'
                            type: string
                          specReplicasPath:
                            description: specReplicasPath defines the JSON path inside
                              of a custom resource that corresponds to Scale `spec.replicas`.
                              Only JSON paths without the array notation are allowed.
                              Must be a JSON Path under `.spec`. If there is no value
                              under the given path in the custom resource, the `/scale`
                              subresource will return an error on GET.
                            type: string
                          statusReplicasPath:
                            description: statusReplicasPath defines the JSON path
                              inside of a custom resource that corresponds to Scale
                              `status.replicas`. Only JSON paths without the array
                              notation are allowed. Must be a JSON Path under `.status`.
                              If there is no value under the given path in the custom
                              resource, the `status.replicas` value in the `/scale`
                              subresource will default to 0.
                            type: string
                        required:
                        - specReplicasPath
                        - statusReplicasPath
                        type: object
                      status:
                        description: 'status indicates the custom resource should
                          serve a `/status` subresource. When enabled: 1. requests
                          to the custom resource primary endpoint ignore changes to
                          the `status` stanza of the object. 2. requests to the custom
                          resource `/status` subresource ignore changes to anything
                          other than the `status` stanza of the object.'
                        type: object
                    type: object
                required:
                - name
                - served
                - storage
                type: object
            required:
            - group
            - names
            - scope
            - version
            type: object
          status:
            description: Status communicates the observed state.
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
