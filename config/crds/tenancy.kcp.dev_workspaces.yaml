apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: workspaces.tenancy.kcp.dev
spec:
  group: tenancy.kcp.dev
  names:
    categories:
    - kcp
    kind: Workspace
    listKind: WorkspaceList
    plural: workspaces
    shortNames:
    - ws
    singular: workspace
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - description: Type of the workspace
      jsonPath: .spec.type.name
      name: Type
      type: string
    - description: The current phase (e.g. Scheduling, Initializing, Ready, Deleting)
      jsonPath: .metadata.labels['tenancy\.kcp\.dev/phase']
      name: Phase
      type: string
    - description: URL to access the workspace
      jsonPath: .status.URL
      name: URL
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: "Workspace defines a generic Kubernetes-cluster-like endpoint,
          with standard Kubernetes discovery APIs, OpenAPI and resource API endpoints.
          \n A workspace can be backed by different concrete types of workspace implementation,
          depending on access pattern. All workspace implementations share the characteristic
          that the URL that serves a given workspace can be used with standard Kubernetes
          API machinery and client libraries and command line tools."
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            properties:
              name:
                maxLength: 63
                minLength: 1
                not:
                  enum:
                  - root
                  - system
                pattern: ^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$
                type: string
            type: object
          spec:
            default: {}
            description: WorkspaceSpec holds the desired state of the ClusterWorkspace.
            properties:
              shard:
                description: "location constraints where this workspace can be scheduled
                  to. \n If the no location is specified, an arbitrary location is
                  chosen."
                properties:
                  selector:
                    description: selector is a label selector that filters workspace
                      scheduling targets.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector
                            that contains values, a key, and an operator that relates
                            the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship
                                to a set of values. Valid operators are In, NotIn,
                                Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If
                                the operator is In or NotIn, the values array must
                                be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced
                                during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A
                          single {key,value} in the matchLabels map is equivalent
                          to an element of matchExpressions, whose key field is "key",
                          the operator is "In", and the values array contains only
                          "value". The requirements are ANDed.
                        type: object
                    type: object
                    x-kubernetes-map-type: atomic
                type: object
              type:
                description: "type defines properties of the workspace both on creation
                  (e.g. initial resources and initially installed APIs) and during
                  runtime (e.g. permissions). If no type is provided, the default
                  type for the workspace in which this workspace is nesting will be
                  used. \n The type is a reference to a ClusterWorkspaceType in the
                  listed workspace, but lower-cased. The ClusterWorkspaceType existence
                  is validated at admission during creation. The type is immutable
                  after creation. The use of a type is gated via the RBAC clusterworkspacetypes/use
                  resource permission."
                properties:
                  cluster:
                    description: cluster is the logical cluster of the ClusterWorkspaceType.
                      This is defaulted by resolving the workspace path.
                    pattern: ^[a-z0-9]([-:a-z0-9]*[a-z0-9])?$
                    type: string
                    x-kubernetes-validations:
                    - message: name is immutable
                      rule: self == oldSelf
                  name:
                    description: name is the name of the ClusterWorkspaceType
                    pattern: ^[a-z]([a-z0-9-]{0,61}[a-z0-9])?
                    type: string
                  path:
                    description: path is an absolute reference to the workspace that
                      owns this type, e.g. root:org:ws.
                    pattern: ^root(:[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                    type: string
                required:
                - name
                type: object
                x-kubernetes-validations:
                - message: name is immutable
                  rule: self.name == oldSelf.name
                - message: path is immutable
                  rule: has(oldSelf.path) == has(self.path)
                - message: path is immutable
                  rule: '!has(oldSelf.path) || !has(self.path) || self.path == oldSelf.path'
                - message: cluster is immutable
                  rule: has(oldSelf.cluster) == has(self.cluster)
            type: object
          status:
            default: {}
            description: WorkspaceStatus communicates the observed state of the Workspace.
            properties:
              URL:
                description: url is the address under which the Kubernetes-cluster-like
                  endpoint can be found. This URL can be used to access the workspace
                  with standard Kubernetes client libraries and command line tools.
                minLength: 1
                type: string
              cluster:
                description: cluster is the name of the logical cluster this workspace
                  is stored under.
                type: string
                x-kubernetes-validations:
                - message: cluster is immutable
                  rule: self == oldSelf
              conditions:
                description: Current processing state of the ClusterWorkspace.
                items:
                  description: Condition defines an observation of a object operational
                    state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              initializers:
                description: initializers must be cleared by a controller before the
                  workspace is ready and can be used.
                items:
                  description: WorkspaceInitializer is a unique string corresponding
                    to a cluster workspace initialization controller for the given
                    type of workspaces.
                  pattern: ^(root(:[a-z0-9]([-a-z0-9]*[a-z0-9])?)*(:[a-z][a-z0-9]([-a-z0-9]*[a-z0-9])?))|(system:.+)$
                  type: string
                type: array
              phase:
                default: Scheduling
                description: Phase of the workspace (Scheduling, Initializing, Ready).
                enum:
                - Scheduling
                - Initializing
                - Ready
                type: string
            type: object
            x-kubernetes-validations:
            - message: cluster is immutable
              rule: '!has(oldSelf.cluster) || has(self.cluster)'
            - message: URL cannot be unset
              rule: '!has(oldSelf.URL) || has(self.URL)'
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
