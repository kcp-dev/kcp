
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: apiresourceschemas.apis.kcp.dev
spec:
  group: apis.kcp.dev
  names:
    categories:
    - kcp
    kind: APIResourceSchema
    listKind: APIResourceSchemaList
    plural: apiresourceschemas
    singular: apiresourceschema
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: "APIResourceSchema describes a resource, identified by (group,
          version, resource, schema). \n A APIResourceSchema is immutable and cannot
          be deleted if they are referenced by an APIExport in the same workspace."
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec holds the desired state.
            properties:
              conversions:
                description: Conversions are conversions from one version to the new
                  versions. The map must be exhaustive, i.e. it must contain a mapping
                  for every possible version to every possible version.
                items:
                  description: APIResourceVersionConversion is a conversion from one
                    version to another version.
                  properties:
                    CEL:
                      description: CEL defines a CEL based conversion function.
                      properties:
                        expression:
                          description: expression is the CEL expression to be used.
                            The old object is accessible through the variable “old”.
                            The new object is accessible through the variable "self".
                          minLength: 1
                          type: string
                      required:
                      - expression
                      type: object
                    from:
                      description: from is the source version for the conversion.
                      minLength: 1
                      type: string
                    to:
                      description: from is the source version for the conversion.
                      minLength: 1
                      type: string
                  required:
                  - from
                  - to
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - from
                - to
                x-kubernetes-list-type: map
              group:
                description: group is the API group of the defined custom resource.
                  The custom resources are served under `/apis/<group>/...`.
                minLength: 1
                type: string
              names:
                description: names specify the resource and kind names for the custom
                  resource.
                properties:
                  categories:
                    description: categories is a list of grouped resources this custom
                      resource belongs to (e.g. 'all'). This is published in API discovery
                      documents, and used by clients to support invocations like `kubectl
                      get all`.
                    items:
                      type: string
                    type: array
                  kind:
                    description: kind is the serialized kind of the resource. It is
                      normally CamelCase and singular. Custom resource instances will
                      use this value as the `kind` attribute in API calls.
                    type: string
                  listKind:
                    description: listKind is the serialized kind of the list for this
                      resource. Defaults to "`kind`List".
                    type: string
                  plural:
                    description: plural is the plural name of the resource to serve.
                      The custom resources are served under `/apis/<group>/<version>/.../<plural>`.
                      Must match the name of the CustomResourceDefinition (in the
                      form `<names.plural>.<group>`). Must be all lowercase.
                    type: string
                  shortNames:
                    description: shortNames are short names for the resource, exposed
                      in API discovery documents, and used by clients to support invocations
                      like `kubectl get <shortname>`. It must be all lowercase.
                    items:
                      type: string
                    type: array
                  singular:
                    description: singular is the singular name of the resource. It
                      must be all lowercase. Defaults to lowercased `kind`.
                    type: string
                required:
                - kind
                - plural
                type: object
              predecessors:
                description: "predecessors are references to APIResourceSchemas this
                  one is an evolution of. Predecessors are required when 1. an APIExport
                  spec sets another schema as latest schema available. The new    schemas
                  must be (transitively) evolutions of the previous schemas    (if
                  the old schema is used in at least one APIBinding in another workspace).
                  2. an APIBinding is bound to a new schema. The new schema must be
                  (transitively)    an evolution of the previously bound schema. \n
                  Note: (2) follows from (1) if APIBindings can only be bound to the
                  latest schema       of APIExports. \n A schema is an evolution of
                  another schema if - it has the same group, resource, scopes, names,
                  and - it serves the same versions, and - for every version:   -
                  the status subresource is either served in both or in none, and
                  \  - it has not less non-status subresources than the predecessor,
                  and   - it has an OpenAPI v3 schema that is a compatible evolution
                  of the     predecessor schema. \n These rules are meant to protect
                  the API author from accidentally introducing breaking API changes.
                  Overrides can be set for some rules by the API author to opt-out
                  of the checks, as a conscious decision during API design."
                items:
                  description: PredecessorSchema references a APIResourceSchema that
                    this schema is an evolution of.
                  properties:
                    name:
                      description: name is the name of another APIResourceSchema in
                        the same workspace.
                      minLength: 1
                      type: string
                    overrides:
                      description: "overrides are acknowledgement by the API author
                        that the formally breaking API changes are acceptable. \n
                        WARNING: overriding the API breakage checks can lead to objects
                        that cannot be updated anymore, or to clients that do not
                        work anymore after the schema change."
                      type: object
                    versionOverrides:
                      description: "versionOverrides are acknowledgements by the API
                        author that the formally breaking API changes of the given
                        versions are acceptable. \n WARNING: overriding the API breakage
                        checks can lead to objects that cannot be updated anymore,
                        or to clients that do not work anymore after the schema change."
                      items:
                        description: PredecessorPerVersionOverrides is a list of acknowledgments
                          by the API author of formally breaking API changes of given
                          given version.
                        properties:
                          addedStatusSubresource:
                            description: overrideAddedStatusSubresource acknowledges
                              that the predecessor schema has no status subresource,
                              but the new one has. This is a breaking API change.
                            type: boolean
                          incompatibleSchema:
                            description: "overrideIncompatibleSchema acknowledges
                              that the predecessor schema is incompatible with the
                              new one. This is a breaking API change. \n It might
                              be acceptable to do these kind of schema changes if
                              additional considerations show no or low risk that objects
                              exists in workspaces that are not compatible with the
                              new schema, but have been with the old."
                            type: boolean
                          name:
                            description: name is the version name, e.g. “v1”, “v2beta1”,
                              etc.
                            minLength: 1
                            type: string
                          notServedAnymore:
                            description: notServedAnymore acknowledges that the predecessor
                              schema served this API version, but the new one does
                              not. The old HTTP API will not work anymore and client
                              might fail.
                            type: boolean
                          removedStatusSubresource:
                            description: overrideRemovedStatusSubresource acknowledges
                              that the predecessor schema has a status subresource,
                              but the new one does not. This is a breaking API change.
                            type: boolean
                        required:
                        - name
                        type: object
                      type: array
                      x-kubernetes-list-map-keys:
                      - name
                      x-kubernetes-list-type: map
                  required:
                  - name
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - name
                x-kubernetes-list-type: map
              scope:
                description: scope indicates whether the defined custom resource is
                  cluster- or namespace-scoped. Allowed values are `Cluster` and `Namespaced`.
                enum:
                - Cluster
                - Namespaced
                type: string
              versions:
                description: "versions is the API version of the defined custom resource.
                  \n Note: the OpenAPI v3 schemas must be equal for all versions until
                  CEL       version migration is supported."
                items:
                  description: APIResourceVersion describes one API version of a resource.
                  properties:
                    additionalPrinterColumns:
                      description: additionalPrinterColumns specifies additional columns
                        returned in Table output. See https://kubernetes.io/docs/reference/using-api/api-concepts/#receiving-resources-as-tables
                        for details. If no columns are specified, a single column
                        displaying the age of the custom resource is used.
                      items:
                        description: CustomResourceColumnDefinition specifies a column
                          for server side printing.
                        properties:
                          description:
                            description: description is a human readable description
                              of this column.
                            type: string
                          format:
                            description: format is an optional OpenAPI type definition
                              for this column. The 'name' format is applied to the
                              primary identifier column to assist in clients identifying
                              column is the resource name. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types
                              for details.
                            type: string
                          jsonPath:
                            description: jsonPath is a simple JSON path (i.e. with
                              array notation) which is evaluated against each custom
                              resource to produce the value for this column.
                            type: string
                          name:
                            description: name is a human readable name for the column.
                            type: string
                          priority:
                            description: priority is an integer defining the relative
                              importance of this column compared to others. Lower
                              numbers are considered higher priority. Columns that
                              may be omitted in limited space scenarios should be
                              given a priority greater than 0.
                            format: int32
                            type: integer
                          type:
                            description: type is an OpenAPI type definition for this
                              column. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types
                              for details.
                            type: string
                        required:
                        - jsonPath
                        - name
                        - type
                        type: object
                      type: array
                      x-kubernetes-list-map-keys:
                      - name
                      x-kubernetes-list-type: map
                    deprecated:
                      description: deprecated indicates this version of the custom
                        resource API is deprecated. When set to true, API requests
                        to this version receive a warning header in the server response.
                        Defaults to false.
                      type: boolean
                    deprecationWarning:
                      description: deprecationWarning overrides the default warning
                        returned to API clients. May only be set when `deprecated`
                        is true. The default warning indicates this version is deprecated
                        and recommends use of the newest served version of equal or
                        greater stability, if one exists.
                      type: string
                    name:
                      description: name is the version name, e.g. “v1”, “v2beta1”,
                        etc. The custom resources are served under this version at
                        `/apis/<group>/<version>/...` if `served` is true.
                      minLength: 1
                      pattern: ^v[1-9][0-9]*([a-z]+[1-9][0-9]*)?$
                      type: string
                    schema:
                      description: schema describes the structural schema used for
                        validation, pruning, and defaulting of this version of the
                        custom resource.
                      type: object
                      x-kubernetes-map-type: atomic
                      x-kubernetes-preserve-unknown-fields: true
                    served:
                      default: true
                      description: served is a flag enabling/disabling this version
                        from being served via REST APIs
                      type: boolean
                    storage:
                      description: storage indicates this version should be used when
                        persisting custom resources to storage. There must be exactly
                        one version with storage=true.
                      type: boolean
                    subresources:
                      description: subresources specify what subresources this version
                        of the defined custom resource have.
                      properties:
                        scale:
                          description: scale indicates the custom resource should
                            serve a `/scale` subresource that returns an `autoscaling/v1`
                            Scale object.
                          properties:
                            labelSelectorPath:
                              description: 'labelSelectorPath defines the JSON path
                                inside of a custom resource that corresponds to Scale
                                `status.selector`. Only JSON paths without the array
                                notation are allowed. Must be a JSON Path under `.status`
                                or `.spec`. Must be set to work with HorizontalPodAutoscaler.
                                The field pointed by this JSON path must be a string
                                field (not a complex selector struct) which contains
                                a serialized label selector in string form. More info:
                                https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions#scale-subresource
                                If there is no value under the given path in the custom
                                resource, the `status.selector` value in the `/scale`
                                subresource will default to the empty string.'
                              type: string
                            specReplicasPath:
                              description: specReplicasPath defines the JSON path
                                inside of a custom resource that corresponds to Scale
                                `spec.replicas`. Only JSON paths without the array
                                notation are allowed. Must be a JSON Path under `.spec`.
                                If there is no value under the given path in the custom
                                resource, the `/scale` subresource will return an
                                error on GET.
                              type: string
                            statusReplicasPath:
                              description: statusReplicasPath defines the JSON path
                                inside of a custom resource that corresponds to Scale
                                `status.replicas`. Only JSON paths without the array
                                notation are allowed. Must be a JSON Path under `.status`.
                                If there is no value under the given path in the custom
                                resource, the `status.replicas` value in the `/scale`
                                subresource will default to 0.
                              type: string
                          required:
                          - specReplicasPath
                          - statusReplicasPath
                          type: object
                        status:
                          description: 'status indicates the custom resource should
                            serve a `/status` subresource. When enabled: 1. requests
                            to the custom resource primary endpoint ignore changes
                            to the `status` stanza of the object. 2. requests to the
                            custom resource `/status` subresource ignore changes to
                            anything other than the `status` stanza of the object.'
                          type: object
                      type: object
                  required:
                  - name
                  - schema
                  - served
                  - storage
                  type: object
                minItems: 1
                type: array
                x-kubernetes-list-map-keys:
                - name
                x-kubernetes-list-type: map
            required:
            - group
            - names
            - scope
            - versions
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
