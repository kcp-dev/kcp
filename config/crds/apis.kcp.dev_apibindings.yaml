apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: apibindings.apis.kcp.dev
spec:
  group: apis.kcp.dev
  names:
    categories:
    - kcp
    kind: APIBinding
    listKind: APIBindingList
    plural: apibindings
    singular: apibinding
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: "APIBinding enables a set of resources and their behaviour through
          an external service provider in this workspace. \n The service provider
          uses an APIExport to expose the API."
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec holds the desired state.
            properties:
              acceptedPermissionClaims:
                description: acceptedPermissionClaims records the permissions that
                  are granted to the bound workspace. Access is granted on a GroupResource
                  basis and can be filtered on objects by many different selectors.
                items:
                  properties:
                    group:
                      description: group is the name of an API group. For core groups
                        this is the empty string '""'.
                      pattern: ^(|[a-z0-9]([-a-z0-9]*[a-z0-9](\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*)?)$
                      type: string
                    identityHash:
                      description: This is the identity for a given APIExport that
                        the APIResourceSchema belongs to. The hash can be found on
                        APIExport and APIResourceSchema's status. It will be empty
                        for core types. Note that one must look this up for a particular
                        KCP instance.
                      type: string
                    resource:
                      description: 'resource is the name of the resource. Note: it
                        is worth noting that you can not ask for permissions for resource
                        provided by a CRD not provided by an api export.'
                      pattern: ^[a-z][-a-z0-9]*[a-z0-9]$
                      type: string
                  required:
                  - resource
                  type: object
                type: array
              reference:
                description: reference uniquely identifies an API to bind to.
                oneOf:
                - required:
                  - workspace
                properties:
                  workspace:
                    description: workspace is a reference to an APIExport in the same
                      organization. The creator of the APIBinding needs to have access
                      to the APIExport with the verb `bind` in order to bind to it.
                    oneOf:
                    - required:
                      - path
                    properties:
                      exportName:
                        description: Name of the APIExport that describes the API.
                        type: string
                      path:
                        description: path is an absolute reference to a workspace,
                          e.g. root:org:ws. The workspace must be some ancestor or
                          a child of some ancestor. If it is unset, the path of the
                          APIBinding is used.
                        pattern: ^root(:[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                        type: string
                    required:
                    - exportName
                    type: object
                type: object
            required:
            - reference
            type: object
          status:
            description: Status communicates the observed state.
            properties:
              ObservedAcceptedPermissionClaims:
                description: observedAcceptedPermissionClaims records the permissions
                  that the export provider is granted to the bound workspace. This
                  is granted by binding implictily to a export that contains permissionClaims.
                  Access is granted on a GroupResource basis and can be filtered on
                  objects by many different selectors.
                items:
                  properties:
                    group:
                      description: group is the name of an API group. For core groups
                        this is the empty string '""'.
                      pattern: ^(|[a-z0-9]([-a-z0-9]*[a-z0-9](\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*)?)$
                      type: string
                    identityHash:
                      description: This is the identity for a given APIExport that
                        the APIResourceSchema belongs to. The hash can be found on
                        APIExport and APIResourceSchema's status. It will be empty
                        for core types. Note that one must look this up for a particular
                        KCP instance.
                      type: string
                    resource:
                      description: 'resource is the name of the resource. Note: it
                        is worth noting that you can not ask for permissions for resource
                        provided by a CRD not provided by an api export.'
                      pattern: ^[a-z][-a-z0-9]*[a-z0-9]$
                      type: string
                  required:
                  - resource
                  type: object
                type: array
              boundExport:
                description: "boundExport records the export this binding is bound
                  to currently. It can differ from the export that was specified in
                  the spec while rebinding to a different APIExport. \n This field
                  is what gives the APIExport visibility into the objects in this
                  workspace."
                properties:
                  workspace:
                    description: workspace is a reference to an APIExport in the same
                      organization. The creator of the APIBinding needs to have access
                      to the APIExport with the verb `bind` in order to bind to it.
                    properties:
                      exportName:
                        description: Name of the APIExport that describes the API.
                        type: string
                      path:
                        description: path is an absolute reference to a workspace,
                          e.g. root:org:ws. The workspace must be some ancestor or
                          a child of some ancestor. If it is unset, the path of the
                          APIBinding is used.
                        pattern: ^root(:[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                        type: string
                    required:
                    - exportName
                    type: object
                type: object
              boundResources:
                description: boundResources records the state of bound APIs.
                items:
                  description: BoundAPIResource describes a bound GroupVersionResource
                    through an APIResourceSchema of an APIExport..
                  properties:
                    group:
                      description: group is the group of the bound API. Empty string
                        for the core API group.
                      type: string
                    resource:
                      description: "resource is the resource of the bound API. \n
                        kubebuilder:validation:MinLength=1"
                      type: string
                    schema:
                      description: Schema references the APIResourceSchema that is
                        bound to this API.
                      properties:
                        UID:
                          description: UID is the UID of the APIResourceSchema that
                            is bound to this API.
                          minLength: 1
                          type: string
                        identityHash:
                          description: identityHash is the hash of the API identity
                            that this schema is bound to. The API identity determines
                            the etcd prefix used to persist the object. Different
                            identity means that the objects are effectively served
                            and stored under a distinct resource. A CRD of the same
                            GroupVersionResource uses a different identity and hence
                            a separate etcd prefix.
                          minLength: 1
                          type: string
                        name:
                          description: name is the bound APIResourceSchema name.
                          minLength: 1
                          type: string
                      required:
                      - UID
                      - identityHash
                      - name
                      type: object
                    storageVersions:
                      description: "storageVersions lists all versions of a resource
                        that were ever persisted. Tracking these versions allows a
                        migration path for stored versions in etcd. The field is mutable
                        so a migration controller can finish a migration to another
                        version (ensuring no old objects are left in storage), and
                        then remove the rest of the versions from this list. \n Versions
                        may not be removed while they exist in this list."
                      items:
                        type: string
                      type: array
                      x-kubernetes-list-type: set
                  required:
                  - group
                  - resource
                  - schema
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - group
                - resource
                x-kubernetes-list-type: map
              conditions:
                description: conditions is a list of conditions that apply to the
                  APIBinding.
                items:
                  description: Condition defines an observation of a object operational
                    state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              phase:
                description: 'phase is the current phase of the APIBinding: - "":
                  the APIBinding has just been created, waiting to be bound. - Binding:
                  the APIBinding is being bound. - Bound: the APIBinding is bound
                  and the referenced APIs are available in the workspace.'
                enum:
                - ""
                - Binding
                - Bound
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
