name: CI

on:
  push:
    branches:
    - main
    - 'release-*'
  pull_request:
    branches:
    - main
    - 'release-*'
    paths-ignore:
      - "docs/**"
      - "**/*.md"
      - ".github/ISSUE_TEMPLATE/*"

# NOTE!!!
#
# If you add a job here that is a REQUIRED status check in GitHub, you MUST add a job with the same name to ci-docs-only.yaml
#
# NOTE!!!

env:
  # etcd uses fsync by default, disable it for running on github actions to avoid disk contention
  # xref: https://github.com/kcp-dev/kcp/pull/435/commits/064a517747d69c2cd8f7f8b4a595ad909e595c89
  UNSAFE_E2E_HACK_DISABLE_ETCD_FSYNC: true

jobs:
  boilerplate:
    name: boilerplate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          path: kcp
      - uses: actions/checkout@v2
        with:
          repository: kubernetes/repo-infra
          ref: master
          path: repo-infra
          fetch-depth: 1
      - run: |
          cd kcp
          ./../repo-infra/hack/verify_boilerplate.py --boilerplate-dir=hack/boilerplate

  imports:
    name: imports
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          path: kcp
      - uses: actions/setup-go@v2
        with:
          go-version: v1.17
      - name: Check imports
        run: |
          cd kcp
          make imports
          if  ! git diff --exit-code; then
            echo "imports are out of date, run make imports"
            exit 1
          fi

  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: v1.17
      - name: Run golangci-lint
        run: make lint

  codegen:
    name: codegen
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: v1.17
      - name: Download modules
        run: go mod download
      - name: Check codegen
        run: make verify-codegen

  test:
    name: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: v1.17
      - run: make build
      - run: PATH="${PATH}:$(pwd)/bin/" make test

  e2e:
    name: e2e
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: v1.17
      - run: make build
      - run: ARTIFACT_DIR=/tmp/e2e PATH="${PATH}:$(pwd)/bin/" E2E_PARALLELISM=2 make test-e2e
      - uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: e2e-artifacts
          path: /tmp/e2e/**/artifacts/

  e2e-multiple-runs:
    name: e2e-multiple-runs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: v1.17
      - run: make build
      - run: ARTIFACT_DIR=/tmp/e2e PATH="${PATH}:$(pwd)/bin/" COUNT=5 E2E_PARALLELISM=2 make test-e2e
      - uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: e2e-artifacts
          path: /tmp/e2e/**/artifacts/

  e2e-shared-server:
    name: e2e-shared-server
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: v1.17
      - run: make build

      # Install kind with a local registry
      - uses: container-tools/kind-action@v1
        name: Kubernetes KinD Cluster w/local registry

      # Publish a syncer image to the local registry
      - uses: imjasonh/setup-ko@v0.4
      - run: KO_DOCKER_REPO=localhost:5000 ko publish ./cmd/syncer --insecure-registry -t $(git rev-parse --short "$GITHUB_SHA") > /tmp/syncer-image

      - run: |-
          export LOG_DIR=/tmp/e2e/shared-server/artifacts &&
          mkdir -p ${LOG_DIR} &&
          NO_GORUN=1 ./bin/test-server \
          > ${LOG_DIR}/kcp.log 2>&1 &
      - run: |-
          ARTIFACT_DIR=/tmp/e2e \
          PATH="${PATH}:$(pwd)/bin/" \
          TEST_ARGS="-args --use-default-kcp-server --syncer-image=$(cat /tmp/syncer-image) --pcluster-kubeconfig=${KUBECONFIG}" \
          COUNT=2 \
          E2E_PARALLELISM=2 \
          make test-e2e

      # TODO(marun) Collect syncer pod logs?

      - uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: e2e-artifacts
          path: /tmp/e2e/**/artifacts/
